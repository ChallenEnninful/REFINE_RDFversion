% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function phaseout = car_highway_dynamics_gpopsADiGatorHes(input)
global ADiGator_car_highway_dynamics_gpopsADiGatorHes
if isempty(ADiGator_car_highway_dynamics_gpopsADiGatorHes); ADiGator_LoadData(); end
Gator1Data = ADiGator_car_highway_dynamics_gpopsADiGatorHes.car_highway_dynamics_gpopsADiGatorHes.Gator1Data;
Gator2Data = ADiGator_car_highway_dynamics_gpopsADiGatorHes.car_highway_dynamics_gpopsADiGatorHes.Gator2Data;
% ADiGator Start Derivative Computations
m.f = 1575;
%User Line: m = 1575;
lf.f = 1.13;
%User Line: lf = 1.13;
lr.f = 1.67;
%User Line: lr = 1.67;
Izz.f = 3273;
%User Line: Izz = 3273;
Cw.f = 3.41;
%User Line: Cw = 3.41;
Caf1.f = 171600;
%User Line: Caf1 = 1.716e5;
Caf2.f = 1;
%User Line: Caf2 = 1;
Car1.f = 290280;
%User Line: Car1 = 2.9028e5;
Car2.f = 1;
%User Line: Car2 = 1;
Cbf.f = 100000;
%User Line: Cbf  = 1e5;
Cbr.f = 100000;
%User Line: Cbr  = 1e5;
grav_const.f = 9.800000000000001;
%User Line: grav_const = 9.8;
%User Line: %
%User Line: % C_delta = 3;
%User Line: % K_delta = 5; %should not be used, delta control gain, now using linear
A.m.f = m.f;
%User Line: A.m  = m;
A.lf.f = lf.f;
%User Line: A.lf = lf;
A.lr.f = lr.f;
%User Line: A.lr = lr;
A.l.f = lf.f + lr.f;
%User Line: A.l = lf+lr;
A.grav_const.f = grav_const.f;
%User Line: A.grav_const = grav_const;
%User Line: %             A.Cf1 = 2*C1*A.lr/(A.lr+A.lf) ;
%User Line: %             A.Cr1 = 2*C1*A.lf/(A.lr+A.lf) ;
A.Cbf.f = Cbf.f;
%User Line: A.Cbf = Cbf;
A.Cbr.f = Cbr.f;
%User Line: A.Cbr = Cbr;
A.Caf1.f = Caf1.f;
%User Line: A.Caf1 = Caf1;
A.Caf2.f = Caf2.f;
%User Line: A.Caf2 = Caf2;
A.Car1.f = Car1.f;
%User Line: A.Car1 = Car1;
A.Car2.f = Car2.f;
%User Line: A.Car2 = Car2;
A.Cw.f = Cw.f;
%User Line: A.Cw   = Cw;
A.Izz.f = Izz.f;
%User Line: A.Izz  = Izz;
%User Line: % t = input.phase.time
z_total.dV = input.phase.state.dV;
z_total.f = input.phase.state.f;
%User Line: z_total = input.phase.state;
inputs_total.dV = input.phase.control.dV;
inputs_total.f = input.phase.control.f;
%User Line: inputs_total = input.phase.control;
%User Line: % dzdt = zeros(size(z_total));
%User Line: % for i = 1:size(z_total,1)
%User Line: %     z_total;
%User Line: %     inputs_total;
delta.dV = inputs_total.dV(:,1);
delta.f = inputs_total.f(:,1);
%User Line: delta = inputs_total(:,1);
w_cmd.dV = inputs_total.dV(:,2);
w_cmd.f = inputs_total.f(:,2);
%User Line: w_cmd = inputs_total(:,2);
%User Line: %
h.dV = z_total.dV(:,3);
h.f = z_total.f(:,3);
%User Line: h = z_total(:,3);
u.dV = z_total.dV(:,4);
u.f = z_total.f(:,4);
%User Line: u = z_total(:,4);
v.dV = z_total.dV(:,5);
v.f = z_total.f(:,5);
%User Line: v = z_total(:,5);
r.dV = z_total.dV(:,6);
r.f = z_total.f(:,6);
%User Line: r = z_total(:,6);
w.dV = z_total.dV(:,7);
w.f = z_total.f(:,7);
%User Line: w = z_total(:,7);
%User Line: %             u = w;
%User Line: %
%User Line: %
cada1f1dV = A.lf.f*r.dV;
cada1f1 = A.lf.f*r.f;
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1(:,1) = v.dV;
cada2f1 = cada1td1(:,2);
cada2f2 = cada2f1 + cada1f1dV;
cada1td1(:,2) = cada2f2;
vf.dV = cada1td1;
vf.f = v.f + cada1f1;
%User Line: vf = v + A.lf*r;
cada1f1dV = A.lr.f*r.dV;
cada1f1 = A.lr.f*r.f;
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1(:,1) = v.dV;
cada2f1 = cada1td1(:,2);
cada2f2 = uminus(cada1f1dV);
cada2f3 = cada2f1 + cada2f2;
cada1td1(:,2) = cada2f3;
vr.dV = cada1td1;
vr.f = v.f - cada1f1;
%User Line: vr = v - A.lr*r;
%User Line: %
cada1f1dV = uminus(delta.dV);
cada1f1 = uminus(delta.f);
cada2f1dV = cos(cada1f1).*cada1f1dV;
cada2f1 = sin(cada1f1);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f2dVdV = cada1f1dV.*cada2f2dV;
cada1f2dV = cada2f2.*cada1f1dV;
cada1f2 = cos(cada1f1);
cada2f1 = size(u.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = u.dV.*cada1f2dV;
cada2f1 = cada1f2.*u.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(u.dV,1),2);
cada2td1(:,1) = cada1f2dV.*u.dV;
cada2td1(:,2) = cada2td1(:,2) + u.f.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = u.f.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index1) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = u.f.*cada1f2;
cada1f4dV = uminus(delta.dV);
cada1f4 = uminus(delta.f);
cada2f1dV = -sin(cada1f4).*cada1f4dV;
cada2f1 = cos(cada1f4);
cada1f5dVdV = cada1f4dV.*cada2f1dV;
cada1f5dV = cada2f1.*cada1f4dV;
cada1f5 = sin(cada1f4);
cada1tf1dV = cada1f5dV(:,Gator2Data.Index2);
cada1tf1 = cada1f5(:,Gator1Data.Index1);
cada2f1 = size(vf.dV,1);
cada1td1 = zeros(cada2f1,3);
cada2f1dV = vf.dV.*cada1tf1dV;
cada2f1 = cada1tf1.*vf.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index2) = cada2f1;
cada2f1 = cada1td1(:,3);
cada2tf1 = cada1f5dV(:,Gator2Data.Index3);
cada2td1 = zeros(size(vf.dV,1),3);
cada2td1(:,Gator2Data.Index4) = cada2tf1.*vf.dV;
cada2td1(:,3) = cada2td1(:,3) + vf.f.*cada1f5dVdV;
cada2f2dV = cada2td1;
cada2f2 = vf.f.*cada1f5dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,Gator2Data.Index5) = cada2f3dV;
cada2td1(:,Gator2Data.Index6) = cada1td1dV(:,Gator2Data.Index7);
cada1td1dV = cada2td1;
cada1td1(:,3) = cada2f3;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = vf.f.*cada1f5;
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f3dVdV;
cada1td1(:,Gator1Data.Index3) = cada1f3dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index8);
cada2f1 = cada1td1(:,Gator1Data.Index4);
cada2f2dV = -cada1f6dVdV;
cada2f2 = uminus(cada1f6dV);
cada2td1 = zeros(size(cada2f1dV,1),6);
cada2td1(:,Gator2Data.Index9) = cada2f1dV;
cada2td1(:,Gator2Data.Index10) = cada2td1(:,Gator2Data.Index10) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),7);
cada2td1(:,Gator2Data.Index11) = cada2f3dV;
cada2td1(:,4) = cada1td1dV(:,2);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index4) = cada2f3;
u_wf.dVdV = cada1td1dV; u_wf.dV = cada1td1;
u_wf.f = cada1f3 - cada1f6;
%User Line: u_wf = u .* cos(-delta) - vf .* sin(-delta) ;
cada1f1dV = uminus(delta.dV);
cada1f1 = uminus(delta.f);
cada2f1dV = -sin(cada1f1).*cada1f1dV;
cada2f1 = cos(cada1f1);
cada1f2dVdV = cada1f1dV.*cada2f1dV;
cada1f2dV = cada2f1.*cada1f1dV;
cada1f2 = sin(cada1f1);
cada2f1 = size(u.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = u.dV.*cada1f2dV;
cada2f1 = cada1f2.*u.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(u.dV,1),2);
cada2td1(:,1) = cada1f2dV.*u.dV;
cada2td1(:,2) = cada2td1(:,2) + u.f.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = u.f.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index12) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = u.f.*cada1f2;
cada1f4dV = uminus(delta.dV);
cada1f4 = uminus(delta.f);
cada2f1dV = cos(cada1f4).*cada1f4dV;
cada2f1 = sin(cada1f4);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f5dVdV = cada1f4dV.*cada2f2dV;
cada1f5dV = cada2f2.*cada1f4dV;
cada1f5 = cos(cada1f4);
cada1tf1dV = cada1f5dV(:,Gator2Data.Index13);
cada1tf1 = cada1f5(:,Gator1Data.Index5);
cada2f1 = size(vf.dV,1);
cada1td1 = zeros(cada2f1,3);
cada2f1dV = vf.dV.*cada1tf1dV;
cada2f1 = cada1tf1.*vf.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index6) = cada2f1;
cada2f1 = cada1td1(:,3);
cada2tf1 = cada1f5dV(:,Gator2Data.Index14);
cada2td1 = zeros(size(vf.dV,1),3);
cada2td1(:,Gator2Data.Index15) = cada2tf1.*vf.dV;
cada2td1(:,3) = cada2td1(:,3) + vf.f.*cada1f5dVdV;
cada2f2dV = cada2td1;
cada2f2 = vf.f.*cada1f5dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,Gator2Data.Index16) = cada2f3dV;
cada2td1(:,Gator2Data.Index17) = cada1td1dV(:,Gator2Data.Index18);
cada1td1dV = cada2td1;
cada1td1(:,3) = cada2f3;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = vf.f.*cada1f5;
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f3dVdV;
cada1td1(:,Gator1Data.Index7) = cada1f3dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index19);
cada2f1 = cada1td1(:,Gator1Data.Index8);
cada2td1 = zeros(size(cada2f1dV,1),6);
cada2td1(:,Gator2Data.Index20) = cada2f1dV;
cada2td1(:,Gator2Data.Index21) = cada2td1(:,Gator2Data.Index21) + cada1f6dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + cada1f6dV;
cada2td1 = zeros(size(cada1td1,1),7);
cada2td1(:,Gator2Data.Index22) = cada2f2dV;
cada2td1(:,4) = cada1td1dV(:,2);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index8) = cada2f2;
v_wf.dVdV = cada1td1dV; v_wf.dV = cada1td1;
v_wf.f = cada1f3 + cada1f6;
%User Line: v_wf = u .* sin(-delta) + vf .* cos(-delta) ;
%User Line: % %     uv_wf = rot_mat(-delta)*[;];
%User Line: % %
cada1tf1dV = u.dV(:,Gator2Data.Index23);
cada1tf1 = u.f(:,Gator1Data.Index9);
cada2f1 = size(vr.dV,1);
cada1td1 = zeros(cada2f1,3);
cada2f1dV = -vr.dV./cada1tf1.^2.*cada1tf1dV;
cada2f1 = vr.dV./cada1tf1;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index10) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2f2dV = -vr.dV;
cada2f2 = uminus(vr.f);
cada2f3dV = 2.*u.f.^(2-1).*u.dV;
cada2f3 = u.f.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index24);
cada2td1 = zeros(size(cada2f2dV,1),3);
cada2td1(:,Gator2Data.Index25) = cada2f2dV./cada2tf1;
cada2td1(:,1) = cada2td1(:,1) + -cada2f2./cada2f3.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = u.dV(:,Gator2Data.Index26);
cada2f5dV = cada2tf1.*cada2f4dV;
cada2f5 = cada2f4.*u.dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,Gator2Data.Index27) = cada2f6dV;
cada2td1(:,Gator2Data.Index28) = cada1td1dV(:,Gator2Data.Index29);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f6;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = vr.f./u.f;
cada1tf1dV = cada1f1dV(:,Gator2Data.Index30);
cada1tf1 = cada1f1(:,Gator1Data.Index11);
cada2tf2 = cada1tf1(:,Gator2Data.Index31);
cada2f1dV = 2.*cada2tf2.^(2-1).*cada1tf1dV;
cada2f1 = cada1tf1.^2;
cada2f2dV = cada2f1dV;
cada2f2 = 1 + cada2f1;
cada2tf2 = cada2f2(:,Gator2Data.Index32);
cada2f3dV = -1./cada2tf2.^2.*cada2f2dV;
cada2f3 = 1./cada2f2;
cada2tf1 = cada1f1dV(:,Gator2Data.Index33);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index34);
cada2td1(:,Gator2Data.Index35) = cada2td1(:,Gator2Data.Index35) + cada2tf1.*cada1f1dVdV;
alphar.dVdV = cada2td1;
alphar.dV = cada2f3.*cada1f1dV;
alphar.f = atan(cada1f1);
%User Line: alphar = atan( vr ./ u);
cada1f1 = uminus(A.Car1.f);
cada1f2dVdV = A.Car2.f.*alphar.dVdV;
cada1f2dV = A.Car2.f*alphar.dV;
cada1f2 = A.Car2.f*alphar.f;
cada1tf1dV = cada1f2dV(:,Gator2Data.Index36);
cada1tf1 = cada1f2(:,Gator1Data.Index12);
cada2tf1 = cada1tf1(:,Gator2Data.Index37);
cada2f1dV = -sech(cada2tf1).*tanh(cada2tf1).*cada1tf1dV;
cada2f1 = sech(cada1tf1);
cada2tf2 = cada2f1(:,Gator2Data.Index38);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada2f1dV;
cada2f2 = cada2f1.^2;
cada2tf1 = cada1f2dV(:,Gator2Data.Index39);
cada2td1 = cada2tf1.*cada2f2dV;
cada2tf1 = cada2f2(:,Gator2Data.Index40);
cada2td1 = cada2td1 + cada2tf1.*cada1f2dVdV;
cada1f3dVdV = cada2td1;
cada1f3dV = cada2f2.*cada1f2dV;
cada1f3 = tanh(cada1f2);
Fywr.dVdV = cada1f1.*cada1f3dVdV;
Fywr.dV = cada1f1*cada1f3dV;
Fywr.f = cada1f1*cada1f3;
%User Line: Fywr = -A.Car1*tanh(A.Car2*alphar);
%User Line: % % %     betaf = (w - uv_wf(1)) ./ max(sqrt(uv_wf(1).^2 +0.01), sqrt(w.^2 +0.01));
cada2f1 = size(w.dV,1);
cada1td1 = zeros(cada2f1,5);
cada1td1(:,4) = w.dV;
cada2f1 = cada1td1(:,Gator1Data.Index13);
cada2f2dV = -u_wf.dVdV;
cada2f2 = uminus(u_wf.dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada1td1dV = cada2f3dV;
cada1td1(:,Gator1Data.Index13) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = w.f - u_wf.f;
cada1tf1dV = u_wf.dV(:,Gator2Data.Index41);
cada1tf1 = u_wf.f(:,Gator1Data.Index14);
cada2tf1 = cada1tf1(:,Gator2Data.Index42);
cada2td1 = zeros(size(cada1f1dVdV,1),20);
cada2td1(:,Gator2Data.Index43) = cada1f1dVdV./cada2tf1;
cada2tf1 = cada1f1dV(:,Gator2Data.Index44);
cada2tf2 = cada1tf1(:,Gator2Data.Index45);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1f1dV./cada1tf1;
cada1tf1dV = cada1f1dV(:,Gator2Data.Index46);
cada1tf1 = cada1f1(:,Gator1Data.Index15);
cada1tf2dV = u_wf.dV(:,Gator2Data.Index47);
cada1tf2 = u_wf.f(:,Gator1Data.Index16);
cada2f1dV = cada1td1dV(:,Gator2Data.Index48);
cada2f1 = cada1td1(:,Gator1Data.Index17);
cada2f2dV = -cada1tf1dV;
cada2f2 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index49);
cada2f3dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f3 = cada1tf2.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index50);
cada2td1 = cada2f2dV./cada2tf1;
cada2tf1 = cada2f2(:,Gator2Data.Index51);
cada2tf2 = cada2f3(:,Gator2Data.Index52);
cada2td1(:,Gator2Data.Index53) = cada2td1(:,Gator2Data.Index53) + -cada2tf1./cada2tf2.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = u_wf.dV(:,Gator2Data.Index54);
cada2td1 = cada2tf1.*cada2f4dV;
cada2tf1 = cada2f4(:,Gator2Data.Index55);
cada2td1(:,Gator2Data.Index56) = cada2td1(:,Gator2Data.Index56) + cada2tf1.*u_wf.dVdV;
cada2f5dV = cada2td1;
cada2f5 = cada2f4.*u_wf.dV;
cada2td1 = zeros(size(cada2f1dV,1),20);
cada2td1(:,Gator2Data.Index57) = cada2f1dV;
cada2td1 = cada2td1 + cada2f5dV;
cada2f6dV = cada2td1;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index58) = cada2f6dV;
cada2td1(:,Gator2Data.Index59) = cada1td1dV(:,Gator2Data.Index60);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index17) = cada2f6;
betaf.dVdV = cada1td1dV; betaf.dV = cada1td1;
betaf.f = cada1f1./u_wf.f;
%User Line: betaf = (w - u_wf) ./ u_wf;
%User Line: % %     %                 betar = (w - uv_wr(1)) ./ max(sqrt(uv_wr(1).^2 +0.01), sqrt(w.^2 +0.01));
%User Line: % %
cada1tf1dV = u_wf.dV(:,Gator2Data.Index61);
cada1tf1 = u_wf.f(:,Gator1Data.Index18);
cada2tf1 = cada1tf1(:,Gator2Data.Index62);
cada2td1 = zeros(size(v_wf.dVdV,1),16);
cada2td1(:,Gator2Data.Index63) = v_wf.dVdV./cada2tf1;
cada2tf1 = v_wf.dV(:,Gator2Data.Index64);
cada2tf2 = cada1tf1(:,Gator2Data.Index65);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada1td1dV = cada2td1;
cada1td1 = v_wf.dV./cada1tf1;
cada1tf1dV = v_wf.dV(:,Gator2Data.Index66);
cada1tf1 = v_wf.f(:,Gator1Data.Index19);
cada1tf2dV = u_wf.dV(:,Gator2Data.Index67);
cada1tf2 = u_wf.f(:,Gator1Data.Index20);
cada2f1dV = -cada1tf1dV;
cada2f1 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index68);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f2 = cada1tf2.^2;
cada2tf1 = cada2f2(:,Gator2Data.Index69);
cada2td1 = cada2f1dV./cada2tf1;
cada2tf1 = cada2f1(:,Gator2Data.Index70);
cada2tf2 = cada2f2(:,Gator2Data.Index71);
cada2td1 = cada2td1 + -cada2tf1./cada2tf2.^2.*cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1./cada2f2;
cada2tf1 = u_wf.dV(:,Gator2Data.Index72);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index73);
cada2td1(:,Gator2Data.Index74) = cada2td1(:,Gator2Data.Index74) + cada2tf1.*u_wf.dVdV;
cada2f4dV = cada2td1;
cada2f4 = cada2f3.*u_wf.dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada2f4dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f4;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = v_wf.f./u_wf.f;
cada1tf1dV = cada1f1dV(:,Gator2Data.Index75);
cada1tf1 = cada1f1(:,Gator1Data.Index21);
cada2tf2 = cada1tf1(:,Gator2Data.Index76);
cada2f1dV = 2.*cada2tf2.^(2-1).*cada1tf1dV;
cada2f1 = cada1tf1.^2;
cada2f2dV = cada2f1dV;
cada2f2 = 1 + cada2f1;
cada2tf2 = cada2f2(:,Gator2Data.Index77);
cada2f3dV = -1./cada2tf2.^2.*cada2f2dV;
cada2f3 = 1./cada2f2;
cada2tf1 = cada1f1dV(:,Gator2Data.Index78);
cada2td1 = cada2tf1.*cada2f3dV;
cada2tf1 = cada2f3(:,Gator2Data.Index79);
cada2td1 = cada2td1 + cada2tf1.*cada1f1dVdV;
alphaf.dVdV = cada2td1;
alphaf.dV = cada2f3.*cada1f1dV;
alphaf.f = atan(cada1f1);
%User Line: alphaf = atan(v_wf ./ u_wf);
%User Line: % % %
Fxwf.dVdV = A.Cbf.f.*betaf.dVdV;
Fxwf.dV = A.Cbf.f*betaf.dV;
Fxwf.f = A.Cbf.f*betaf.f;
%User Line: Fxwf = A.Cbf*betaf;
Fxwr.f = 0;
%User Line: Fxwr = 0;
%User Line: % % %
cada1f1 = uminus(A.Caf1.f);
cada1f2dVdV = A.Caf2.f.*alphaf.dVdV;
cada1f2dV = A.Caf2.f*alphaf.dV;
cada1f2 = A.Caf2.f*alphaf.f;
cada1tf1dV = cada1f2dV(:,Gator2Data.Index80);
cada1tf1 = cada1f2(:,Gator1Data.Index22);
cada2tf1 = cada1tf1(:,Gator2Data.Index81);
cada2f1dV = -sech(cada2tf1).*tanh(cada2tf1).*cada1tf1dV;
cada2f1 = sech(cada1tf1);
cada2tf2 = cada2f1(:,Gator2Data.Index82);
cada2f2dV = 2.*cada2tf2.^(2-1).*cada2f1dV;
cada2f2 = cada2f1.^2;
cada2tf1 = cada1f2dV(:,Gator2Data.Index83);
cada2td1 = cada2tf1.*cada2f2dV;
cada2tf1 = cada2f2(:,Gator2Data.Index84);
cada2td1 = cada2td1 + cada2tf1.*cada1f2dVdV;
cada1f3dVdV = cada2td1;
cada1f3dV = cada2f2.*cada1f2dV;
cada1f3 = tanh(cada1f2);
Fywf.dVdV = cada1f1.*cada1f3dVdV;
Fywf.dV = cada1f1*cada1f3dV;
Fywf.f = cada1f1*cada1f3;
%User Line: Fywf = -A.Caf1*tanh(A.Caf2*alphaf);
%User Line: % %
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*r.dV;
cada2f1 = r.f.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2f2dV = r.dV.*v.dV;
cada2f2 = v.f.*r.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),2);
cada2td1(:,1) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = v.f.*r.f;
cada2f1dV = cos(delta.f).*delta.dV;
cada2f1 = sin(delta.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f2dVdV = delta.dV.*cada2f2dV;
cada1f2dV = cada2f2.*delta.dV;
cada1f2 = cos(delta.f);
cada2f1 = size(cada1f2dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1f2dV(:,Gator2Data.Index85);
cada2td1 = cada2tf1.*Fxwf.dV;
cada2td1(:,5) = cada2td1(:,5) + Fxwf.f.*cada1f2dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fxwf.f.*cada1f2dV;
cada1td1dV = cada2f1dV;
cada1td1(:,5) = cada2f1;
cada1tf1dV = cada1f2dV(:,Gator2Data.Index86);
cada1tf1 = cada1f2(:,Gator1Data.Index23);
cada2td1 = zeros(size(cada1tf1dV,1),24);
cada2td1(:,Gator2Data.Index87) = Fxwf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index88);
cada2td1 = cada2td1 + cada2tf1.*Fxwf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fxwf.dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index89) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = cada1f2.*Fxwf.f;
cada2f1dV = -sin(delta.f).*delta.dV;
cada2f1 = cos(delta.f);
cada1f4dVdV = delta.dV.*cada2f1dV;
cada1f4dV = cada2f1.*delta.dV;
cada1f4 = sin(delta.f);
cada2f1 = size(cada1f4dV,1);
cada1td1 = zeros(cada2f1,4);
cada2tf1 = cada1f4dV(:,Gator2Data.Index90);
cada2td1 = cada2tf1.*Fywf.dV;
cada2td1(:,4) = cada2td1(:,4) + Fywf.f.*cada1f4dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fywf.f.*cada1f4dV;
cada1td1dV = cada2f1dV;
cada1td1(:,4) = cada2f1;
cada1tf1dV = cada1f4dV(:,Gator2Data.Index91);
cada1tf1 = cada1f4(:,Gator1Data.Index24);
cada2td1 = zeros(size(cada1tf1dV,1),16);
cada2td1(:,Gator2Data.Index92) = Fywf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index93);
cada2td1 = cada2td1 + cada2tf1.*Fywf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fywf.dV;
cada2td1 = zeros(size(cada1td1dV,1),16);
cada2td1(:,Gator2Data.Index94) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f4.*Fywf.f;
cada1td1dV = cada1f3dVdV; cada1td1 = cada1f3dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index95);
cada2f1 = cada1td1(:,Gator1Data.Index25);
cada2f2dV = -cada1f5dVdV;
cada2f2 = uminus(cada1f5dV);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index96) = cada2td1(:,Gator2Data.Index96) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index97) = cada2f3dV;
cada2td1(:,Gator2Data.Index98) = cada1td1dV(:,Gator2Data.Index99);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index25) = cada2f3;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dVdV = cada1f6dVdV; cada1f7dV = cada1f6dV;
cada1f7 = cada1f6 + Fxwr.f;
cada1f8dVdV = cada1f7dVdV./A.m.f;
cada1f8dV = cada1f7dV/A.m.f;
cada1f8 = cada1f7/A.m.f;
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,5);
cada1td1dV = cada1f1dVdV;
cada1td1(:,Gator1Data.Index26) = cada1f1dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index100) = cada1td1dV;
cada2td1 = cada2td1 + cada1f8dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f8dV;
au.dVdV = cada1td1dV; au.dV = cada1td1;
au.f = cada1f1 + cada1f8;
%User Line: au =  v.*r + (cos(delta).*Fxwf-sin(delta).*Fywf + Fxwr)/A.m;
cada1f1dV = uminus(u.dV);
cada1f1 = uminus(u.f);
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = cada1f1dV.*r.dV;
cada2f1 = r.f.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2f2dV = r.dV.*cada1f1dV;
cada2f2 = cada1f1.*r.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),2);
cada2td1(:,1) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = cada1f1.*r.f;
cada2f1dV = -sin(delta.f).*delta.dV;
cada2f1 = cos(delta.f);
cada1f3dVdV = delta.dV.*cada2f1dV;
cada1f3dV = cada2f1.*delta.dV;
cada1f3 = sin(delta.f);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1f3dV(:,Gator2Data.Index101);
cada2td1 = cada2tf1.*Fxwf.dV;
cada2td1(:,5) = cada2td1(:,5) + Fxwf.f.*cada1f3dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fxwf.f.*cada1f3dV;
cada1td1dV = cada2f1dV;
cada1td1(:,5) = cada2f1;
cada1tf1dV = cada1f3dV(:,Gator2Data.Index102);
cada1tf1 = cada1f3(:,Gator1Data.Index27);
cada2td1 = zeros(size(cada1tf1dV,1),24);
cada2td1(:,Gator2Data.Index103) = Fxwf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index104);
cada2td1 = cada2td1 + cada2tf1.*Fxwf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fxwf.dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index105) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f4dVdV = cada1td1dV; cada1f4dV = cada1td1;
cada1f4 = cada1f3.*Fxwf.f;
cada2f1dV = cos(delta.f).*delta.dV;
cada2f1 = sin(delta.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f5dVdV = delta.dV.*cada2f2dV;
cada1f5dV = cada2f2.*delta.dV;
cada1f5 = cos(delta.f);
cada2f1 = size(cada1f5dV,1);
cada1td1 = zeros(cada2f1,4);
cada2tf1 = cada1f5dV(:,Gator2Data.Index106);
cada2td1 = cada2tf1.*Fywf.dV;
cada2td1(:,4) = cada2td1(:,4) + Fywf.f.*cada1f5dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fywf.f.*cada1f5dV;
cada1td1dV = cada2f1dV;
cada1td1(:,4) = cada2f1;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index107);
cada1tf1 = cada1f5(:,Gator1Data.Index28);
cada2td1 = zeros(size(cada1tf1dV,1),16);
cada2td1(:,Gator2Data.Index108) = Fywf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index109);
cada2td1 = cada2td1 + cada2tf1.*Fywf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fywf.dV;
cada2td1 = zeros(size(cada1td1dV,1),16);
cada2td1(:,Gator2Data.Index110) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f6dVdV = cada1td1dV; cada1f6dV = cada1td1;
cada1f6 = cada1f5.*Fywf.f;
cada1td1dV = cada1f4dVdV; cada1td1 = cada1f4dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index111);
cada2f1 = cada1td1(:,Gator1Data.Index29);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index112) = cada2td1(:,Gator2Data.Index112) + cada1f6dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + cada1f6dV;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index113) = cada2f2dV;
cada2td1(:,Gator2Data.Index114) = cada1td1dV(:,Gator2Data.Index115);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index29) = cada2f2;
cada1f7dVdV = cada1td1dV; cada1f7dV = cada1td1;
cada1f7 = cada1f4 + cada1f6;
cada1td1dV = cada1f7dVdV; cada1td1 = cada1f7dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index116);
cada2f1 = cada1td1(:,Gator1Data.Index30);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index117) = cada2td1(:,Gator2Data.Index117) + Fywr.dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + Fywr.dV;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index118) = cada2f2dV;
cada2td1(:,Gator2Data.Index119) = cada1td1dV(:,Gator2Data.Index120);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index30) = cada2f2;
cada1f8dVdV = cada1td1dV; cada1f8dV = cada1td1;
cada1f8 = cada1f7 + Fywr.f;
cada1f9dVdV = cada1f8dVdV./A.m.f;
cada1f9dV = cada1f8dV/A.m.f;
cada1f9 = cada1f8/A.m.f;
cada2f1 = size(cada1f2dV,1);
cada1td1 = zeros(cada2f1,5);
cada1td1dV = cada1f2dVdV;
cada1td1(:,Gator1Data.Index31) = cada1f2dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index121) = cada1td1dV;
cada2td1 = cada2td1 + cada1f9dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f9dV;
av.dVdV = cada1td1dV; av.dV = cada1td1;
av.f = cada1f2 + cada1f9;
%User Line: av = - u.*r + (sin(delta).*Fxwf+cos(delta).*Fywf + Fywr)/A.m ;
cada2f1dV = -sin(delta.f).*delta.dV;
cada2f1 = cos(delta.f);
cada1f1dVdV = delta.dV.*cada2f1dV;
cada1f1dV = cada2f1.*delta.dV;
cada1f1 = sin(delta.f);
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1f1dV(:,Gator2Data.Index122);
cada2td1 = cada2tf1.*Fxwf.dV;
cada2td1(:,5) = cada2td1(:,5) + Fxwf.f.*cada1f1dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fxwf.f.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,5) = cada2f1;
cada1tf1dV = cada1f1dV(:,Gator2Data.Index123);
cada1tf1 = cada1f1(:,Gator1Data.Index32);
cada2td1 = zeros(size(cada1tf1dV,1),24);
cada2td1(:,Gator2Data.Index124) = Fxwf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index125);
cada2td1 = cada2td1 + cada2tf1.*Fxwf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fxwf.dV;
cada2td1 = zeros(size(cada1td1dV,1),24);
cada2td1(:,Gator2Data.Index126) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = cada1f1.*Fxwf.f;
cada2f1dV = cos(delta.f).*delta.dV;
cada2f1 = sin(delta.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f3dVdV = delta.dV.*cada2f2dV;
cada1f3dV = cada2f2.*delta.dV;
cada1f3 = cos(delta.f);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,4);
cada2tf1 = cada1f3dV(:,Gator2Data.Index127);
cada2td1 = cada2tf1.*Fywf.dV;
cada2td1(:,4) = cada2td1(:,4) + Fywf.f.*cada1f3dVdV;
cada2f1dV = cada2td1;
cada2f1 = Fywf.f.*cada1f3dV;
cada1td1dV = cada2f1dV;
cada1td1(:,4) = cada2f1;
cada1tf1dV = cada1f3dV(:,Gator2Data.Index128);
cada1tf1 = cada1f3(:,Gator1Data.Index33);
cada2td1 = zeros(size(cada1tf1dV,1),16);
cada2td1(:,Gator2Data.Index129) = Fywf.dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index130);
cada2td1 = cada2td1 + cada2tf1.*Fywf.dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*Fywf.dV;
cada2td1 = zeros(size(cada1td1dV,1),16);
cada2td1(:,Gator2Data.Index131) = cada1td1dV;
cada2td1 = cada2td1 + cada2f1dV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada2f1;
cada1f4dVdV = cada1td1dV; cada1f4dV = cada1td1;
cada1f4 = cada1f3.*Fywf.f;
cada1td1dV = cada1f2dVdV; cada1td1 = cada1f2dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index132);
cada2f1 = cada1td1(:,Gator1Data.Index34);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index133) = cada2td1(:,Gator2Data.Index133) + cada1f4dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + cada1f4dV;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index134) = cada2f2dV;
cada2td1(:,Gator2Data.Index135) = cada1td1dV(:,Gator2Data.Index136);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index34) = cada2f2;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f2 + cada1f4;
cada1f6dVdV = A.lf.f.*cada1f5dVdV;
cada1f6dV = A.lf.f*cada1f5dV;
cada1f6 = A.lf.f*cada1f5;
cada1f7dVdV = A.lr.f.*Fywr.dVdV;
cada1f7dV = A.lr.f*Fywr.dV;
cada1f7 = A.lr.f*Fywr.f;
cada1td1dV = cada1f6dVdV; cada1td1 = cada1f6dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index137);
cada2f1 = cada1td1(:,Gator1Data.Index35);
cada2f2dV = -cada1f7dVdV;
cada2f2 = uminus(cada1f7dV);
cada2td1 = cada2f1dV;
cada2td1(:,Gator2Data.Index138) = cada2td1(:,Gator2Data.Index138) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index139) = cada2f3dV;
cada2td1(:,Gator2Data.Index140) = cada1td1dV(:,Gator2Data.Index141);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index35) = cada2f3;
torque.dVdV = cada1td1dV; torque.dV = cada1td1;
torque.f = cada1f6 - cada1f7;
%User Line: torque = A.lf*(sin(delta).*Fxwf+cos(delta).*Fywf) - A.lr * Fywr;
ar.dVdV = torque.dVdV./A.Izz.f;
ar.dV = torque.dV/A.Izz.f;
ar.f = torque.f/A.Izz.f;
%User Line: ar = torque/A.Izz;
%User Line: % alphaf = atan( uv_wf(2) ./ uv_wf(1));
%User Line: % Fywf = -A.Caf1*tanh(A.Caf2*alphaf);
%User Line: % betaf = (w - uv_wf(1)) ./ sqrt(uv_wf(1).^2 +0.01);
%User Line: %      Fxwf = A.Cbf*betaf;
%User Line: %     au =  v*r + (cos(delta)*Fxwf-sin(delta)*Fywf + Fxwr)/A.m;
cada2f1 = size(w_cmd.dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1(:,2) = w_cmd.dV;
cada2f1 = cada1td1(:,1);
cada2f2 = uminus(w.dV);
cada2f3 = cada2f1 + cada2f2;
cada1td1(:,1) = cada2f3;
cada1f1dV = cada1td1;
cada1f1 = w_cmd.f - w.f;
dw.dV = A.Cw.f*cada1f1dV;
dw.f = A.Cw.f*cada1f1;
%User Line: dw = A.Cw*(w_cmd - w);
%User Line: %
%User Line: % au = 0;
%User Line: % av = 0;
%User Line: % ar = 0;
%User Line: % dzdt = [u.*cos(h)-v.*sin(h),u.*sin(h)+v.*cos(h),r,zeros(length(input.phase.time),1),zeros(length(input.phase.time),1),zeros(length(input.phase.time),1),dw];
cada2f1dV = cos(h.f).*h.dV;
cada2f1 = sin(h.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f1dVdV = h.dV.*cada2f2dV;
cada1f1dV = cada2f2.*h.dV;
cada1f1 = cos(h.f);
cada2f1 = size(u.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = u.dV.*cada1f1dV;
cada2f1 = cada1f1.*u.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(u.dV,1),2);
cada2td1(:,2) = cada1f1dV.*u.dV;
cada2td1(:,1) = cada2td1(:,1) + u.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = u.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index142) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = u.f.*cada1f1;
cada2f1dV = -sin(h.f).*h.dV;
cada2f1 = cos(h.f);
cada1f3dVdV = h.dV.*cada2f1dV;
cada1f3dV = cada2f1.*h.dV;
cada1f3 = sin(h.f);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cada1f3dV;
cada2f1 = cada1f3.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,2) = cada1f3dV.*v.dV;
cada2td1(:,1) = cada2td1(:,1) + v.f.*cada1f3dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cada1f3dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index143) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f4dVdV = cada1td1dV; cada1f4dV = cada1td1;
cada1f4 = v.f.*cada1f3;
cada2f1 = size(cada1f2dV,1);
cada1td1 = zeros(cada2f1,3);
cada1td1dV = cada1f2dVdV;
cada1td1(:,Gator1Data.Index36) = cada1f2dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index144);
cada2f1 = cada1td1(:,Gator1Data.Index37);
cada2f2dV = -cada1f4dVdV;
cada2f2 = uminus(cada1f4dV);
cada2td1 = zeros(size(cada2f1dV,1),4);
cada2td1(:,Gator2Data.Index145) = cada2f1dV;
cada2td1(:,Gator2Data.Index146) = cada2td1(:,Gator2Data.Index146) + cada2f2dV;
cada2f3dV = cada2td1;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,Gator2Data.Index147) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,2);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index37) = cada2f3;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f2 - cada1f4;
cada2f1dV = -sin(h.f).*h.dV;
cada2f1 = cos(h.f);
cada1f6dVdV = h.dV.*cada2f1dV;
cada1f6dV = cada2f1.*h.dV;
cada1f6 = sin(h.f);
cada2f1 = size(u.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = u.dV.*cada1f6dV;
cada2f1 = cada1f6.*u.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(u.dV,1),2);
cada2td1(:,2) = cada1f6dV.*u.dV;
cada2td1(:,1) = cada2td1(:,1) + u.f.*cada1f6dVdV;
cada2f2dV = cada2td1;
cada2f2 = u.f.*cada1f6dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index148) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f7dVdV = cada1td1dV; cada1f7dV = cada1td1;
cada1f7 = u.f.*cada1f6;
cada2f1dV = cos(h.f).*h.dV;
cada2f1 = sin(h.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f8dVdV = h.dV.*cada2f2dV;
cada1f8dV = cada2f2.*h.dV;
cada1f8 = cos(h.f);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cada1f8dV;
cada2f1 = cada1f8.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,2) = cada1f8dV.*v.dV;
cada2td1(:,1) = cada2td1(:,1) + v.f.*cada1f8dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cada1f8dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index149) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f9dVdV = cada1td1dV; cada1f9dV = cada1td1;
cada1f9 = v.f.*cada1f8;
cada2f1 = size(cada1f7dV,1);
cada1td1 = zeros(cada2f1,3);
cada1td1dV = cada1f7dVdV;
cada1td1(:,Gator1Data.Index38) = cada1f7dV;
cada2f1dV = cada1td1dV(:,Gator2Data.Index150);
cada2f1 = cada1td1(:,Gator1Data.Index39);
cada2td1 = zeros(size(cada2f1dV,1),4);
cada2td1(:,Gator2Data.Index151) = cada2f1dV;
cada2td1(:,Gator2Data.Index152) = cada2td1(:,Gator2Data.Index152) + cada1f9dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada2f1 + cada1f9dV;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,Gator2Data.Index153) = cada2f2dV;
cada2td1(:,2) = cada1td1dV(:,2);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index39) = cada2f2;
cada1f10dVdV = cada1td1dV; cada1f10dV = cada1td1;
cada1f10 = cada1f7 + cada1f9;
cada2f1 = size(cada1f5,1);
cada1td1 = zeros(cada2f1,24);
cada1td1dV = cada1f5dVdV;
cada1td1(:,Gator1Data.Index40) = cada1f5dV;
cada2td1 = zeros(size(cada1td1,1),10);
cada2td1(:,Gator2Data.Index154) = cada1f10dVdV;
cada2td1(:,Gator2Data.Index155) = cada1td1dV(:,Gator2Data.Index156);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index41) = cada1f10dV;
cada1td1(:,13) = r.dV;
cada2td1 = zeros(size(cada1td1,1),34);
cada2td1(:,Gator2Data.Index157) = au.dVdV;
cada2td1(:,Gator2Data.Index158) = cada1td1dV(:,Gator2Data.Index159);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index42) = au.dV;
cada2td1 = zeros(size(cada1td1,1),58);
cada2td1(:,Gator2Data.Index160) = av.dVdV;
cada2td1(:,Gator2Data.Index161) = cada1td1dV(:,Gator2Data.Index162);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index43) = av.dV;
cada2td1 = zeros(size(cada1td1,1),82);
cada2td1(:,Gator2Data.Index163) = ar.dVdV;
cada2td1(:,Gator2Data.Index164) = cada1td1dV(:,Gator2Data.Index165);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index44) = ar.dV;
cada1td1(:,Gator1Data.Index45) = dw.dV;
dzdt.dVdV = cada1td1dV; dzdt.dV = cada1td1;
dzdt.f = [cada1f5 cada1f10 r.f au.f av.f ar.f dw.f];
%User Line: dzdt = [u.*cos(h)-v.*sin(h),u.*sin(h)+v.*cos(h),r,au,av,ar,dw];
%User Line: % xdot = u;
phaseout.dynamics.dVdV = dzdt.dVdV; phaseout.dynamics.dV = dzdt.dV;
phaseout.dynamics.f = dzdt.f;
%User Line: phaseout.dynamics = dzdt;
cada1f1dV = z_total.dV(:,1);
cada1f1 = z_total.f(:,1);
cada1f2dV = cada1f1dV;
cada1f2 = cada1f1 - 40;
cada2f1dV = 1.*cada1f2.^(1-1).*cada1f2dV;
cada2f1 = cada1f2.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f3dVdV = cada1f2dV.*cada2f2dV;
cada1f3dV = cada2f2.*cada1f2dV;
cada1f3 = cada1f2.^2;
cada1f4dV = z_total.dV(:,2);
cada1f4 = z_total.f(:,2);
cada1f5dV = cada1f4dV;
cada1f5 = cada1f4 - 1;
cada2f1dV = 1.*cada1f5.^(1-1).*cada1f5dV;
cada2f1 = cada1f5.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f6dVdV = cada1f5dV.*cada2f2dV;
cada1f6dV = cada2f2.*cada1f5dV;
cada1f6 = cada1f5.^2;
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1dV = cada1f3dVdV;
cada1td1(:,1) = cada1f3dV;
cada2f1 = cada1td1(:,2);
cada2f2dV = cada1f6dVdV;
cada2f2 = cada2f1 + cada1f6dV;
cada2td1 = zeros(size(cada1td1,1),2);
cada2td1(:,2) = cada2f2dV;
cada2td1(:,1) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f2;
cada1f7dVdV = cada1td1dV; cada1f7dV = cada1td1;
cada1f7 = cada1f3 + cada1f6;
cada1f8dVdV = cada1f7dVdV; cada1f8dV = cada1f7dV;
cada1f8 = cada1f7 - 9;
cada1f9dV = z_total.dV(:,1);
cada1f9 = z_total.f(:,1);
cada1f10dV = cada1f9dV;
cada1f10 = cada1f9 - 80;
cada2f1dV = 1.*cada1f10.^(1-1).*cada1f10dV;
cada2f1 = cada1f10.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f11dVdV = cada1f10dV.*cada2f2dV;
cada1f11dV = cada2f2.*cada1f10dV;
cada1f11 = cada1f10.^2;
cada1f12dV = z_total.dV(:,2);
cada1f12 = z_total.f(:,2);
cada1f13dV = cada1f12dV;
cada1f13 = cada1f12 + 1;
cada2f1dV = 1.*cada1f13.^(1-1).*cada1f13dV;
cada2f1 = cada1f13.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f14dVdV = cada1f13dV.*cada2f2dV;
cada1f14dV = cada2f2.*cada1f13dV;
cada1f14 = cada1f13.^2;
cada2f1 = size(cada1f11dV,1);
cada1td1 = zeros(cada2f1,2);
cada1td1dV = cada1f11dVdV;
cada1td1(:,1) = cada1f11dV;
cada2f1 = cada1td1(:,2);
cada2f2dV = cada1f14dVdV;
cada2f2 = cada2f1 + cada1f14dV;
cada2td1 = zeros(size(cada1td1,1),2);
cada2td1(:,2) = cada2f2dV;
cada2td1(:,1) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f2;
cada1f15dVdV = cada1td1dV; cada1f15dV = cada1td1;
cada1f15 = cada1f11 + cada1f14;
cada1f16dVdV = cada1f15dVdV; cada1f16dV = cada1f15dV;
cada1f16 = cada1f15 - 9;
cada2f1 = size(cada1f8,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f8dVdV;
cada1td1(:,Gator1Data.Index46) = cada1f8dV;
cada2td1 = zeros(size(cada1td1,1),4);
cada2td1(:,Gator2Data.Index166) = cada1f16dVdV;
cada2td1(:,Gator2Data.Index167) = cada1td1dV(:,Gator2Data.Index168);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index47) = cada1f16dV;
phaseout.path.dVdV = cada1td1dV; phaseout.path.dV = cada1td1;
phaseout.path.f = [cada1f8 cada1f16];
%User Line: phaseout.path = [(z_total(:,1) - 40).^2 + (z_total(:,2) - 1).^2 - 3^2, (z_total(:,1) - 80).^2 + (z_total(:,2) + 1).^2 - 3^2];
phaseout.dynamics.dV_size = [7 12];
phaseout.dynamics.dV_location = Gator1Data.Index48;
phaseout.path.dV_size = [2 12];
phaseout.path.dV_location = Gator1Data.Index49;
phaseout.dynamics.dVdV_size = [phaseout.dynamics.dV_size,12];
phaseout.dynamics.dVdV_location = [phaseout.dynamics.dV_location(Gator2Data.Index169,:), Gator2Data.Index170];
phaseout.path.dVdV_size = [phaseout.path.dV_size,12];
phaseout.path.dVdV_location = [phaseout.path.dV_location(Gator2Data.Index171,:), Gator2Data.Index172];
end


function ADiGator_LoadData()
global ADiGator_car_highway_dynamics_gpopsADiGatorHes
ADiGator_car_highway_dynamics_gpopsADiGatorHes = load('car_highway_dynamics_gpopsADiGatorHes.mat');
return
end