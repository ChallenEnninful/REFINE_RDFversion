% This code was generated using ADiGator version 1.4
% Â©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function phaseout = car_highway_dynamics_gpopsADiGatorGrd(input)
global ADiGator_car_highway_dynamics_gpopsADiGatorGrd
if isempty(ADiGator_car_highway_dynamics_gpopsADiGatorGrd); ADiGator_LoadData(); end
Gator1Data = ADiGator_car_highway_dynamics_gpopsADiGatorGrd.car_highway_dynamics_gpopsADiGatorGrd.Gator1Data;
% ADiGator Start Derivative Computations
m.f =  1575;
%User Line: m = 1575;
lf.f =  1.13;
%User Line: lf = 1.13;
lr.f =  1.67;
%User Line: lr = 1.67;
Izz.f =  3273;
%User Line: Izz = 3273;
Cw.f =  3.41;
%User Line: Cw = 3.41;
Caf1.f =  1.716e5;
%User Line: Caf1 = 1.716e5;
Caf2.f =  1;
%User Line: Caf2 = 1;
Car1.f =  2.9028e5;
%User Line: Car1 = 2.9028e5;
Car2.f =  1;
%User Line: Car2 = 1;
Cbf.f =  1e5;
%User Line: Cbf  = 1e5;
Cbr.f =  1e5;
%User Line: Cbr  = 1e5;
grav_const.f =  9.8;
%User Line: grav_const = 9.8;
%User Line: %
%User Line: % C_delta = 3;
%User Line: % K_delta = 5; %should not be used, delta control gain, now using linear
A.m.f = m.f;
%User Line: A.m  = m;
A.lf.f = lf.f;
%User Line: A.lf = lf;
A.lr.f = lr.f;
%User Line: A.lr = lr;
A.l.f = lf.f + lr.f;
%User Line: A.l = lf+lr;
A.grav_const.f = grav_const.f;
%User Line: A.grav_const = grav_const;
%User Line: %             A.Cf1 = 2*C1*A.lr/(A.lr+A.lf) ;
%User Line: %             A.Cr1 = 2*C1*A.lf/(A.lr+A.lf) ;
A.Cbf.f = Cbf.f;
%User Line: A.Cbf = Cbf;
A.Cbr.f = Cbr.f;
%User Line: A.Cbr = Cbr;
A.Caf1.f = Caf1.f;
%User Line: A.Caf1 = Caf1;
A.Caf2.f = Caf2.f;
%User Line: A.Caf2 = Caf2;
A.Car1.f = Car1.f;
%User Line: A.Car1 = Car1;
A.Car2.f = Car2.f;
%User Line: A.Car2 = Car2;
A.Cw.f = Cw.f;
%User Line: A.Cw   = Cw;
A.Izz.f = Izz.f;
%User Line: A.Izz  = Izz;
%User Line: % t = input.phase.time
z_total.dV = input.phase.state.dV; z_total.f = input.phase.state.f;
%User Line: z_total = input.phase.state;
inputs_total.dV = input.phase.control.dV; inputs_total.f = input.phase.control.f;
%User Line: inputs_total = input.phase.control;
%User Line: % params = input.parameter;
%User Line: % dzdt = zeros(size(z_total));
%User Line: % for i = 1:size(z_total,1)
%User Line: %     z_total;
%User Line: %     inputs_total;
delta.dV = inputs_total.dV(:,1);
delta.f = inputs_total.f(:,1);
%User Line: delta = inputs_total(:,1);
w_cmd.dV = inputs_total.dV(:,2);
w_cmd.f = inputs_total.f(:,2);
%User Line: w_cmd = inputs_total(:,2);
%User Line: %
h.dV = z_total.dV(:,3);
h.f = z_total.f(:,3);
%User Line: h = z_total(:,3);
u.dV = z_total.dV(:,4);
u.f = z_total.f(:,4);
%User Line: u = z_total(:,4);
v.dV = z_total.dV(:,5);
v.f = z_total.f(:,5);
%User Line: v = z_total(:,5);
r.dV = z_total.dV(:,6);
r.f = z_total.f(:,6);
%User Line: r = z_total(:,6);
w.dV = z_total.dV(:,7);
w.f = z_total.f(:,7);
%User Line: w = z_total(:,7);
%User Line: %             u = w;
%User Line: %
%User Line: %
cada1f1dV = A.lf.f.*r.dV;
cada1f1 = A.lf.f*r.f;
cada1td1 = zeros(size(v.dV,1),2);
cada1td1(:,1) = v.dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f1dV;
vf.dV = cada1td1;
vf.f = v.f + cada1f1;
%User Line: vf = v + A.lf*r;
cada1f1dV = A.lr.f.*r.dV;
cada1f1 = A.lr.f*r.f;
cada1td1 = zeros(size(v.dV,1),2);
cada1td1(:,1) = v.dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f1dV;
vr.dV = cada1td1;
vr.f = v.f - cada1f1;
%User Line: vr = v - A.lr*r;
%User Line: %
cada1f1dV = -delta.dV;
cada1f1 = uminus(delta.f);
cada1f2dV = -sin(cada1f1).*cada1f1dV;
cada1f2 = cos(cada1f1);
cada1td1 = zeros(size(u.dV,1),2);
cada1td1(:,1) = cada1f2.*u.dV;
cada1td1(:,2) = cada1td1(:,2) + u.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = u.f.*cada1f2;
cada1f4dV = -delta.dV;
cada1f4 = uminus(delta.f);
cada1f5dV = cos(cada1f4).*cada1f4dV;
cada1f5 = sin(cada1f4);
cada1tf1 = cada1f5(:,Gator1Data.Index1);
cada1td1 = zeros(size(vf.dV,1),3);
cada1td1(:,Gator1Data.Index2) = cada1tf1.*vf.dV;
cada1td1(:,3) = cada1td1(:,3) + vf.f.*cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = vf.f.*cada1f5;
cada1td1 = zeros(size(cada1f3dV,1),4);
cada1td1(:,Gator1Data.Index3) = cada1f3dV;
cada1td1(:,Gator1Data.Index4) = cada1td1(:,Gator1Data.Index4) + -cada1f6dV;
u_wf.dV = cada1td1;
u_wf.f = cada1f3 - cada1f6;
%User Line: u_wf = u .* cos(-delta) - vf .* sin(-delta) ;
cada1f1dV = -delta.dV;
cada1f1 = uminus(delta.f);
cada1f2dV = cos(cada1f1).*cada1f1dV;
cada1f2 = sin(cada1f1);
cada1td1 = zeros(size(u.dV,1),2);
cada1td1(:,1) = cada1f2.*u.dV;
cada1td1(:,2) = cada1td1(:,2) + u.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = u.f.*cada1f2;
cada1f4dV = -delta.dV;
cada1f4 = uminus(delta.f);
cada1f5dV = -sin(cada1f4).*cada1f4dV;
cada1f5 = cos(cada1f4);
cada1tf1 = cada1f5(:,Gator1Data.Index5);
cada1td1 = zeros(size(vf.dV,1),3);
cada1td1(:,Gator1Data.Index6) = cada1tf1.*vf.dV;
cada1td1(:,3) = cada1td1(:,3) + vf.f.*cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = vf.f.*cada1f5;
cada1td1 = zeros(size(cada1f3dV,1),4);
cada1td1(:,Gator1Data.Index7) = cada1f3dV;
cada1td1(:,Gator1Data.Index8) = cada1td1(:,Gator1Data.Index8) + cada1f6dV;
v_wf.dV = cada1td1;
v_wf.f = cada1f3 + cada1f6;
%User Line: v_wf = u .* sin(-delta) + vf .* cos(-delta) ;
%User Line: % %     uv_wf = rot_mat(-delta)*[;];
%User Line: % %
cada1tf1 = u.f(:,Gator1Data.Index9);
cada1td1 = zeros(size(vr.dV,1),3);
cada1td1(:,Gator1Data.Index10) = vr.dV./cada1tf1;
cada1td1(:,1) = cada1td1(:,1) + -vr.f./u.f.^2.*u.dV;
cada1f1dV = cada1td1;
cada1f1 = vr.f./u.f;
cada1tf1 = cada1f1(:,Gator1Data.Index11);
alphar.dV = 1./(1+cada1tf1.^2).*cada1f1dV;
alphar.f = atan(cada1f1);
%User Line: alphar = atan( vr ./ u);
cada1f1 = uminus(A.Car1.f);
cada1f2dV = A.Car2.f.*alphar.dV;
cada1f2 = A.Car2.f*alphar.f;
cada1tf1 = cada1f2(:,Gator1Data.Index12);
cada1f3dV = sech(cada1tf1).^2.*cada1f2dV;
cada1f3 = tanh(cada1f2);
Fywr.dV = cada1f1.*cada1f3dV;
Fywr.f = cada1f1*cada1f3;
%User Line: Fywr = -A.Car1*tanh(A.Car2*alphar);
%User Line: % % %     betaf = (w - uv_wf(1)) ./ max(sqrt(uv_wf(1).^2 +0.01), sqrt(w.^2 +0.01));
cada1td1 = zeros(size(w.dV,1),5);
cada1td1(:,4) = w.dV;
cada1td1(:,Gator1Data.Index13) = cada1td1(:,Gator1Data.Index13) + -u_wf.dV;
cada1f1dV = cada1td1;
cada1f1 = w.f - u_wf.f;
cada1tf1 = u_wf.f(:,Gator1Data.Index14);
cada1td1 = cada1f1dV./cada1tf1;
cada1tf1 = cada1f1(:,Gator1Data.Index15);
cada1tf2 = u_wf.f(:,Gator1Data.Index16);
cada1td1(:,Gator1Data.Index17) = cada1td1(:,Gator1Data.Index17) + -cada1tf1./cada1tf2.^2.*u_wf.dV;
betaf.dV = cada1td1;
betaf.f = cada1f1./u_wf.f;
%User Line: betaf = (w - u_wf) ./ u_wf;
%User Line: % %     %                 betar = (w - uv_wr(1)) ./ max(sqrt(uv_wr(1).^2 +0.01), sqrt(w.^2 +0.01));
%User Line: % %
cada1tf1 = u_wf.f(:,Gator1Data.Index18);
cada1td1 = v_wf.dV./cada1tf1;
cada1tf1 = v_wf.f(:,Gator1Data.Index19);
cada1tf2 = u_wf.f(:,Gator1Data.Index20);
cada1td1 = cada1td1 + -cada1tf1./cada1tf2.^2.*u_wf.dV;
cada1f1dV = cada1td1;
cada1f1 = v_wf.f./u_wf.f;
cada1tf1 = cada1f1(:,Gator1Data.Index21);
alphaf.dV = 1./(1+cada1tf1.^2).*cada1f1dV;
alphaf.f = atan(cada1f1);
%User Line: alphaf = atan(v_wf ./ u_wf);
%User Line: % % %
Fxwf.dV = A.Cbf.f.*betaf.dV;
Fxwf.f = A.Cbf.f*betaf.f;
%User Line: Fxwf = A.Cbf*betaf;
Fxwr.f =  0;
%User Line: Fxwr = 0;
%User Line: % % %
cada1f1 = uminus(A.Caf1.f);
cada1f2dV = A.Caf2.f.*alphaf.dV;
cada1f2 = A.Caf2.f*alphaf.f;
cada1tf1 = cada1f2(:,Gator1Data.Index22);
cada1f3dV = sech(cada1tf1).^2.*cada1f2dV;
cada1f3 = tanh(cada1f2);
Fywf.dV = cada1f1.*cada1f3dV;
Fywf.f = cada1f1*cada1f3;
%User Line: Fywf = -A.Caf1*tanh(A.Caf2*alphaf);
%User Line: % %
cada1td1 = zeros(size(v.dV,1),2);
cada1td1(:,1) = r.f.*v.dV;
cada1td1(:,2) = cada1td1(:,2) + v.f.*r.dV;
cada1f1dV = cada1td1;
cada1f1 = v.f.*r.f;
cada1f2dV = -sin(delta.f).*delta.dV;
cada1f2 = cos(delta.f);
cada1td1 = zeros(size(cada1f2dV,1),5);
cada1td1(:,5) = Fxwf.f.*cada1f2dV;
cada1tf1 = cada1f2(:,Gator1Data.Index23);
cada1td1 = cada1td1 + cada1tf1.*Fxwf.dV;
cada1f3dV = cada1td1;
cada1f3 = cada1f2.*Fxwf.f;
cada1f4dV = cos(delta.f).*delta.dV;
cada1f4 = sin(delta.f);
cada1td1 = zeros(size(cada1f4dV,1),4);
cada1td1(:,4) = Fywf.f.*cada1f4dV;
cada1tf1 = cada1f4(:,Gator1Data.Index24);
cada1td1 = cada1td1 + cada1tf1.*Fywf.dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f4.*Fywf.f;
cada1td1 = cada1f3dV;
cada1td1(:,Gator1Data.Index25) = cada1td1(:,Gator1Data.Index25) + -cada1f5dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f3 - cada1f5;
cada1f7dV = cada1f6dV;
cada1f7 = cada1f6 + Fxwr.f;
cada1f8dV = cada1f7dV./A.m.f;
cada1f8 = cada1f7/A.m.f;
cada1td1 = zeros(size(cada1f1dV,1),5);
cada1td1(:,Gator1Data.Index26) = cada1f1dV;
cada1td1 = cada1td1 + cada1f8dV;
au.dV = cada1td1;
au.f = cada1f1 + cada1f8;
%User Line: au =  v.*r + (cos(delta).*Fxwf-sin(delta).*Fywf + Fxwr)/A.m;
cada1f1dV = -u.dV;
cada1f1 = uminus(u.f);
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = r.f.*cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f1.*r.dV;
cada1f2dV = cada1td1;
cada1f2 = cada1f1.*r.f;
cada1f3dV = cos(delta.f).*delta.dV;
cada1f3 = sin(delta.f);
cada1td1 = zeros(size(cada1f3dV,1),5);
cada1td1(:,5) = Fxwf.f.*cada1f3dV;
cada1tf1 = cada1f3(:,Gator1Data.Index27);
cada1td1 = cada1td1 + cada1tf1.*Fxwf.dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f3.*Fxwf.f;
cada1f5dV = -sin(delta.f).*delta.dV;
cada1f5 = cos(delta.f);
cada1td1 = zeros(size(cada1f5dV,1),4);
cada1td1(:,4) = Fywf.f.*cada1f5dV;
cada1tf1 = cada1f5(:,Gator1Data.Index28);
cada1td1 = cada1td1 + cada1tf1.*Fywf.dV;
cada1f6dV = cada1td1;
cada1f6 = cada1f5.*Fywf.f;
cada1td1 = cada1f4dV;
cada1td1(:,Gator1Data.Index29) = cada1td1(:,Gator1Data.Index29) + cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f4 + cada1f6;
cada1td1 = cada1f7dV;
cada1td1(:,Gator1Data.Index30) = cada1td1(:,Gator1Data.Index30) + Fywr.dV;
cada1f8dV = cada1td1;
cada1f8 = cada1f7 + Fywr.f;
cada1f9dV = cada1f8dV./A.m.f;
cada1f9 = cada1f8/A.m.f;
cada1td1 = zeros(size(cada1f2dV,1),5);
cada1td1(:,Gator1Data.Index31) = cada1f2dV;
cada1td1 = cada1td1 + cada1f9dV;
av.dV = cada1td1;
av.f = cada1f2 + cada1f9;
%User Line: av = - u.*r + (sin(delta).*Fxwf+cos(delta).*Fywf + Fywr)/A.m ;
cada1f1dV = cos(delta.f).*delta.dV;
cada1f1 = sin(delta.f);
cada1td1 = zeros(size(cada1f1dV,1),5);
cada1td1(:,5) = Fxwf.f.*cada1f1dV;
cada1tf1 = cada1f1(:,Gator1Data.Index32);
cada1td1 = cada1td1 + cada1tf1.*Fxwf.dV;
cada1f2dV = cada1td1;
cada1f2 = cada1f1.*Fxwf.f;
cada1f3dV = -sin(delta.f).*delta.dV;
cada1f3 = cos(delta.f);
cada1td1 = zeros(size(cada1f3dV,1),4);
cada1td1(:,4) = Fywf.f.*cada1f3dV;
cada1tf1 = cada1f3(:,Gator1Data.Index33);
cada1td1 = cada1td1 + cada1tf1.*Fywf.dV;
cada1f4dV = cada1td1;
cada1f4 = cada1f3.*Fywf.f;
cada1td1 = cada1f2dV;
cada1td1(:,Gator1Data.Index34) = cada1td1(:,Gator1Data.Index34) + cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f2 + cada1f4;
cada1f6dV = A.lf.f.*cada1f5dV;
cada1f6 = A.lf.f*cada1f5;
cada1f7dV = A.lr.f.*Fywr.dV;
cada1f7 = A.lr.f*Fywr.f;
cada1td1 = cada1f6dV;
cada1td1(:,Gator1Data.Index35) = cada1td1(:,Gator1Data.Index35) + -cada1f7dV;
torque.dV = cada1td1;
torque.f = cada1f6 - cada1f7;
%User Line: torque = A.lf*(sin(delta).*Fxwf+cos(delta).*Fywf) - A.lr * Fywr;
ar.dV = torque.dV./A.Izz.f;
ar.f = torque.f/A.Izz.f;
%User Line: ar = torque/A.Izz;
%User Line: % alphaf = atan( uv_wf(2) ./ uv_wf(1));
%User Line: % Fywf = -A.Caf1*tanh(A.Caf2*alphaf);
%User Line: % betaf = (w - uv_wf(1)) ./ sqrt(uv_wf(1).^2 +0.01);
%User Line: %      Fxwf = A.Cbf*betaf;
%User Line: %     au =  v*r + (cos(delta)*Fxwf-sin(delta)*Fywf + Fxwr)/A.m;
cada1td1 = zeros(size(w_cmd.dV,1),2);
cada1td1(:,2) = w_cmd.dV;
cada1td1(:,1) = cada1td1(:,1) + -w.dV;
cada1f1dV = cada1td1;
cada1f1 = w_cmd.f - w.f;
dw.dV = A.Cw.f.*cada1f1dV;
dw.f = A.Cw.f*cada1f1;
%User Line: dw = A.Cw*(w_cmd - w);
%User Line: %
param.dV = input.phase.parameter.dV; param.f = input.phase.parameter.f;
%User Line: param = input.phase.parameter;
%User Line: % au = 0;
%User Line: % av = 0;
%User Line: % ar = 0;
%User Line: % dzdt = [u.*cos(h)-v.*sin(h),u.*sin(h)+v.*cos(h),r,zeros(length(input.phase.time),1),zeros(length(input.phase.time),1),zeros(length(input.phase.time),1),dw];
cada1f1dV = -sin(h.f).*h.dV;
cada1f1 = cos(h.f);
cada1td1 = zeros(size(u.dV,1),2);
cada1td1(:,2) = cada1f1.*u.dV;
cada1td1(:,1) = cada1td1(:,1) + u.f.*cada1f1dV;
cada1f2dV = cada1td1;
cada1f2 = u.f.*cada1f1;
cada1f3dV = cos(h.f).*h.dV;
cada1f3 = sin(h.f);
cada1td1 = zeros(size(v.dV,1),2);
cada1td1(:,2) = cada1f3.*v.dV;
cada1td1(:,1) = cada1td1(:,1) + v.f.*cada1f3dV;
cada1f4dV = cada1td1;
cada1f4 = v.f.*cada1f3;
cada1td1 = zeros(size(cada1f2dV,1),3);
cada1td1(:,Gator1Data.Index36) = cada1f2dV;
cada1td1(:,Gator1Data.Index37) = cada1td1(:,Gator1Data.Index37) + -cada1f4dV;
cada1f5dV = cada1td1;
cada1f5 = cada1f2 - cada1f4;
cada1f6dV = cos(h.f).*h.dV;
cada1f6 = sin(h.f);
cada1td1 = zeros(size(u.dV,1),2);
cada1td1(:,2) = cada1f6.*u.dV;
cada1td1(:,1) = cada1td1(:,1) + u.f.*cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = u.f.*cada1f6;
cada1f8dV = -sin(h.f).*h.dV;
cada1f8 = cos(h.f);
cada1td1 = zeros(size(v.dV,1),2);
cada1td1(:,2) = cada1f8.*v.dV;
cada1td1(:,1) = cada1td1(:,1) + v.f.*cada1f8dV;
cada1f9dV = cada1td1;
cada1f9 = v.f.*cada1f8;
cada1td1 = zeros(size(cada1f7dV,1),3);
cada1td1(:,Gator1Data.Index38) = cada1f7dV;
cada1td1(:,Gator1Data.Index39) = cada1td1(:,Gator1Data.Index39) + cada1f9dV;
cada1f10dV = cada1td1;
cada1f10 = cada1f7 + cada1f9;
cada1td1 = zeros(size(cada1f5,1),24);
cada1td1(:,Gator1Data.Index40) = cada1f5dV;
cada1td1(:,Gator1Data.Index41) = cada1f10dV;
cada1td1(:,13) = r.dV;
cada1td1(:,Gator1Data.Index42) = au.dV;
cada1td1(:,Gator1Data.Index43) = av.dV;
cada1td1(:,Gator1Data.Index44) = ar.dV;
cada1td1(:,Gator1Data.Index45) = dw.dV;
dzdt.dV = cada1td1;
dzdt.f = [cada1f5 cada1f10 r.f au.f av.f ar.f dw.f];
%User Line: dzdt = [u.*cos(h)-v.*sin(h),u.*sin(h)+v.*cos(h),r,au,av,ar,dw];
%User Line: % xdot = u;
phaseout.dynamics.dV = dzdt.dV; phaseout.dynamics.f = dzdt.f;
%User Line: phaseout.dynamics = dzdt;
cada1f1dV = param.dV(:,3);
cada1f1 = param.f(:,3);
cada1f2dV = param.dV(:,5);
cada1f2 = param.f(:,5);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index46) = cada1td1(:,Gator1Data.Index46) + cada1f3dV;
car1x.dV = cada1td1;
car1x.f = cada1f1 + cada1f3;
%User Line: car1x = param(:,3) + input.phase.time.*param(:,5);
car1y.dV = param.dV(:,4);
car1y.f = param.f(:,4);
%User Line: car1y = param(:,4);
cada1f1dV = param.dV(:,6);
cada1f1 = param.f(:,6);
cada1f2dV = param.dV(:,8);
cada1f2 = param.f(:,8);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index47) = cada1td1(:,Gator1Data.Index47) + cada1f3dV;
car2x.dV = cada1td1;
car2x.f = cada1f1 + cada1f3;
%User Line: car2x = param(:,6) + input.phase.time.*param(:,8);
car2y.dV = param.dV(:,7);
car2y.f = param.f(:,7);
%User Line: car2y = param(:,7);
cada1f1dV = param.dV(:,9);
cada1f1 = param.f(:,9);
cada1f2dV = param.dV(:,11);
cada1f2 = param.f(:,11);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index48) = cada1td1(:,Gator1Data.Index48) + cada1f3dV;
car3x.dV = cada1td1;
car3x.f = cada1f1 + cada1f3;
%User Line: car3x = param(:,9) + input.phase.time.*param(:,11);
car3y.dV = param.dV(:,10);
car3y.f = param.f(:,10);
%User Line: car3y = param(:,10);
cada1f1dV = param.dV(:,12);
cada1f1 = param.f(:,12);
cada1f2dV = param.dV(:,14);
cada1f2 = param.f(:,14);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index49) = cada1td1(:,Gator1Data.Index49) + cada1f3dV;
car4x.dV = cada1td1;
car4x.f = cada1f1 + cada1f3;
%User Line: car4x = param(:,12) + input.phase.time.*param(:,14);
car4y.dV = param.dV(:,13);
car4y.f = param.f(:,13);
%User Line: car4y = param(:,13);
cada1f1dV = param.dV(:,15);
cada1f1 = param.f(:,15);
cada1f2dV = param.dV(:,17);
cada1f2 = param.f(:,17);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index50) = cada1td1(:,Gator1Data.Index50) + cada1f3dV;
car5x.dV = cada1td1;
car5x.f = cada1f1 + cada1f3;
%User Line: car5x = param(:,15) + input.phase.time.*param(:,17);
car5y.dV = param.dV(:,16);
car5y.f = param.f(:,16);
%User Line: car5y = param(:,16);
cada1f1dV = param.dV(:,18);
cada1f1 = param.f(:,18);
cada1f2dV = param.dV(:,20);
cada1f2 = param.f(:,20);
cada1td1 = zeros(size(input.phase.time.dV,1),2);
cada1td1(:,1) = cada1f2.*input.phase.time.dV;
cada1td1(:,2) = cada1td1(:,2) + input.phase.time.f.*cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = input.phase.time.f.*cada1f2;
cada1td1 = zeros(size(cada1f1dV,1),3);
cada1td1(:,2) = cada1f1dV;
cada1td1(:,Gator1Data.Index51) = cada1td1(:,Gator1Data.Index51) + cada1f3dV;
car6x.dV = cada1td1;
car6x.f = cada1f1 + cada1f3;
%User Line: car6x = param(:,18) + input.phase.time.*param(:,20);
car6y.dV = param.dV(:,19);
car6y.f = param.f(:,19);
%User Line: car6y = param(:,19);
car_width.f =  2;
%User Line: car_width = 2;
car_length.f =  4.8;
%User Line: car_length = 4.8;
dist_from_center.f =  1.4;
%User Line: dist_from_center = 1.4;
circle_radius.f = 1.721;
%User Line: circle_radius    =1.721;
car_size.f = 2*circle_radius.f;
%User Line: car_size = 2*circle_radius;
cada1f1dV = z_total.dV(:,1);
cada1f1 = z_total.f(:,1);
cada1f2dV = z_total.dV(:,3);
cada1f2 = z_total.f(:,3);
cada1f3dV = -sin(cada1f2).*cada1f2dV;
cada1f3 = cos(cada1f2);
cada1f4dV = dist_from_center.f.*cada1f3dV;
cada1f4 = cada1f3*dist_from_center.f;
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
car_position_1_x.dV = cada1td1;
car_position_1_x.f = cada1f1 + cada1f4;
%User Line: car_position_1_x = z_total(:,1) + cos(z_total(:,3))*dist_from_center;
cada1f1dV = z_total.dV(:,2);
cada1f1 = z_total.f(:,2);
cada1f2dV = z_total.dV(:,3);
cada1f2 = z_total.f(:,3);
cada1f3dV = cos(cada1f2).*cada1f2dV;
cada1f3 = sin(cada1f2);
cada1f4dV = dist_from_center.f.*cada1f3dV;
cada1f4 = cada1f3*dist_from_center.f;
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + cada1f4dV;
car_position_1_y.dV = cada1td1;
car_position_1_y.f = cada1f1 + cada1f4;
%User Line: car_position_1_y = z_total(:,2) + sin(z_total(:,3))*dist_from_center;
cada1f1dV = z_total.dV(:,1);
cada1f1 = z_total.f(:,1);
cada1f2dV = z_total.dV(:,3);
cada1f2 = z_total.f(:,3);
cada1f3dV = -sin(cada1f2).*cada1f2dV;
cada1f3 = cos(cada1f2);
cada1f4dV = dist_from_center.f.*cada1f3dV;
cada1f4 = cada1f3*dist_from_center.f;
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f4dV;
car_position_2_x.dV = cada1td1;
car_position_2_x.f = cada1f1 - cada1f4;
%User Line: car_position_2_x = z_total(:,1) - cos(z_total(:,3))*dist_from_center;
cada1f1dV = z_total.dV(:,2);
cada1f1 = z_total.f(:,2);
cada1f2dV = z_total.dV(:,3);
cada1f2 = z_total.f(:,3);
cada1f3dV = cos(cada1f2).*cada1f2dV;
cada1f3 = sin(cada1f2);
cada1f4dV = dist_from_center.f.*cada1f3dV;
cada1f4 = cada1f3*dist_from_center.f;
cada1td1 = zeros(size(cada1f1dV,1),2);
cada1td1(:,1) = cada1f1dV;
cada1td1(:,2) = cada1td1(:,2) + -cada1f4dV;
car_position_2_y.dV = cada1td1;
car_position_2_y.f = cada1f1 - cada1f4;
%User Line: car_position_2_y = z_total(:,2) - sin(z_total(:,3))*dist_from_center;
%User Line: % each car will have 4 constraints, pos 1 - car1 left , pos 1 - car1 right,
%User Line: % pos 2 - car 1 left, pos 2 - car 1 right
cada1f1dV = z_total.dV(:,2);
cada1f1 = z_total.f(:,2);
cada1f2dV = car1x.dV;
cada1f2 = car1x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index52) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index53) = cada1td1(:,Gator1Data.Index53) + -cada1f2dV;
cada1f3dV = cada1td1;
cada1f3 = car_position_1_x.f - cada1f2;
cada1tf2 = cada1f3(:,Gator1Data.Index54);
cada1f4dV = 2.*cada1tf2.^(2-1).*cada1f3dV;
cada1f4 = cada1f3.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index55) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car1y.dV;
cada1f5dV = cada1td1;
cada1f5 = car_position_1_y.f - car1y.f;
cada1tf2 = cada1f5(:,Gator1Data.Index56);
cada1f6dV = 2.*cada1tf2.^(2-1).*cada1f5dV;
cada1f6 = cada1f5.^2;
cada1td1 = zeros(size(cada1f4dV,1),7);
cada1td1(:,Gator1Data.Index57) = cada1f4dV;
cada1td1(:,Gator1Data.Index58) = cada1td1(:,Gator1Data.Index58) + cada1f6dV;
cada1f7dV = cada1td1;
cada1f7 = cada1f4 + cada1f6;
cada1f8 = car_size.f^2;
cada1f9dV = cada1f7dV;
cada1f9 = cada1f7 - cada1f8;
cada1f10dV = car1x.dV;
cada1f10 = car1x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index59) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index60) = cada1td1(:,Gator1Data.Index60) + -cada1f10dV;
cada1f11dV = cada1td1;
cada1f11 = car_position_1_x.f - cada1f10;
cada1tf2 = cada1f11(:,Gator1Data.Index61);
cada1f12dV = 2.*cada1tf2.^(2-1).*cada1f11dV;
cada1f12 = cada1f11.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index62) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car1y.dV;
cada1f13dV = cada1td1;
cada1f13 = car_position_1_y.f - car1y.f;
cada1tf2 = cada1f13(:,Gator1Data.Index63);
cada1f14dV = 2.*cada1tf2.^(2-1).*cada1f13dV;
cada1f14 = cada1f13.^2;
cada1td1 = zeros(size(cada1f12dV,1),7);
cada1td1(:,Gator1Data.Index64) = cada1f12dV;
cada1td1(:,Gator1Data.Index65) = cada1td1(:,Gator1Data.Index65) + cada1f14dV;
cada1f15dV = cada1td1;
cada1f15 = cada1f12 + cada1f14;
cada1f16 = car_size.f^2;
cada1f17dV = cada1f15dV;
cada1f17 = cada1f15 - cada1f16;
cada1f18dV = car1x.dV;
cada1f18 = car1x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index66) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index67) = cada1td1(:,Gator1Data.Index67) + -cada1f18dV;
cada1f19dV = cada1td1;
cada1f19 = car_position_2_x.f - cada1f18;
cada1tf2 = cada1f19(:,Gator1Data.Index68);
cada1f20dV = 2.*cada1tf2.^(2-1).*cada1f19dV;
cada1f20 = cada1f19.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index69) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car1y.dV;
cada1f21dV = cada1td1;
cada1f21 = car_position_2_y.f - car1y.f;
cada1tf2 = cada1f21(:,Gator1Data.Index70);
cada1f22dV = 2.*cada1tf2.^(2-1).*cada1f21dV;
cada1f22 = cada1f21.^2;
cada1td1 = zeros(size(cada1f20dV,1),7);
cada1td1(:,Gator1Data.Index71) = cada1f20dV;
cada1td1(:,Gator1Data.Index72) = cada1td1(:,Gator1Data.Index72) + cada1f22dV;
cada1f23dV = cada1td1;
cada1f23 = cada1f20 + cada1f22;
cada1f24 = car_size.f^2;
cada1f25dV = cada1f23dV;
cada1f25 = cada1f23 - cada1f24;
cada1f26dV = car1x.dV;
cada1f26 = car1x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index73) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index74) = cada1td1(:,Gator1Data.Index74) + -cada1f26dV;
cada1f27dV = cada1td1;
cada1f27 = car_position_2_x.f - cada1f26;
cada1tf2 = cada1f27(:,Gator1Data.Index75);
cada1f28dV = 2.*cada1tf2.^(2-1).*cada1f27dV;
cada1f28 = cada1f27.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index76) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car1y.dV;
cada1f29dV = cada1td1;
cada1f29 = car_position_2_y.f - car1y.f;
cada1tf2 = cada1f29(:,Gator1Data.Index77);
cada1f30dV = 2.*cada1tf2.^(2-1).*cada1f29dV;
cada1f30 = cada1f29.^2;
cada1td1 = zeros(size(cada1f28dV,1),7);
cada1td1(:,Gator1Data.Index78) = cada1f28dV;
cada1td1(:,Gator1Data.Index79) = cada1td1(:,Gator1Data.Index79) + cada1f30dV;
cada1f31dV = cada1td1;
cada1f31 = cada1f28 + cada1f30;
cada1f32 = car_size.f^2;
cada1f33dV = cada1f31dV;
cada1f33 = cada1f31 - cada1f32;
cada1f34dV = car2x.dV;
cada1f34 = car2x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index80) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index81) = cada1td1(:,Gator1Data.Index81) + -cada1f34dV;
cada1f35dV = cada1td1;
cada1f35 = car_position_1_x.f - cada1f34;
cada1tf2 = cada1f35(:,Gator1Data.Index82);
cada1f36dV = 2.*cada1tf2.^(2-1).*cada1f35dV;
cada1f36 = cada1f35.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index83) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car2y.dV;
cada1f37dV = cada1td1;
cada1f37 = car_position_1_y.f - car2y.f;
cada1tf2 = cada1f37(:,Gator1Data.Index84);
cada1f38dV = 2.*cada1tf2.^(2-1).*cada1f37dV;
cada1f38 = cada1f37.^2;
cada1td1 = zeros(size(cada1f36dV,1),7);
cada1td1(:,Gator1Data.Index85) = cada1f36dV;
cada1td1(:,Gator1Data.Index86) = cada1td1(:,Gator1Data.Index86) + cada1f38dV;
cada1f39dV = cada1td1;
cada1f39 = cada1f36 + cada1f38;
cada1f40 = car_size.f^2;
cada1f41dV = cada1f39dV;
cada1f41 = cada1f39 - cada1f40;
cada1f42dV = car2x.dV;
cada1f42 = car2x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index87) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index88) = cada1td1(:,Gator1Data.Index88) + -cada1f42dV;
cada1f43dV = cada1td1;
cada1f43 = car_position_1_x.f - cada1f42;
cada1tf2 = cada1f43(:,Gator1Data.Index89);
cada1f44dV = 2.*cada1tf2.^(2-1).*cada1f43dV;
cada1f44 = cada1f43.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index90) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car2y.dV;
cada1f45dV = cada1td1;
cada1f45 = car_position_1_y.f - car2y.f;
cada1tf2 = cada1f45(:,Gator1Data.Index91);
cada1f46dV = 2.*cada1tf2.^(2-1).*cada1f45dV;
cada1f46 = cada1f45.^2;
cada1td1 = zeros(size(cada1f44dV,1),7);
cada1td1(:,Gator1Data.Index92) = cada1f44dV;
cada1td1(:,Gator1Data.Index93) = cada1td1(:,Gator1Data.Index93) + cada1f46dV;
cada1f47dV = cada1td1;
cada1f47 = cada1f44 + cada1f46;
cada1f48 = car_size.f^2;
cada1f49dV = cada1f47dV;
cada1f49 = cada1f47 - cada1f48;
cada1f50dV = car2x.dV;
cada1f50 = car2x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index94) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index95) = cada1td1(:,Gator1Data.Index95) + -cada1f50dV;
cada1f51dV = cada1td1;
cada1f51 = car_position_2_x.f - cada1f50;
cada1tf2 = cada1f51(:,Gator1Data.Index96);
cada1f52dV = 2.*cada1tf2.^(2-1).*cada1f51dV;
cada1f52 = cada1f51.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index97) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car2y.dV;
cada1f53dV = cada1td1;
cada1f53 = car_position_2_y.f - car2y.f;
cada1tf2 = cada1f53(:,Gator1Data.Index98);
cada1f54dV = 2.*cada1tf2.^(2-1).*cada1f53dV;
cada1f54 = cada1f53.^2;
cada1td1 = zeros(size(cada1f52dV,1),7);
cada1td1(:,Gator1Data.Index99) = cada1f52dV;
cada1td1(:,Gator1Data.Index100) = cada1td1(:,Gator1Data.Index100) + cada1f54dV;
cada1f55dV = cada1td1;
cada1f55 = cada1f52 + cada1f54;
cada1f56 = car_size.f^2;
cada1f57dV = cada1f55dV;
cada1f57 = cada1f55 - cada1f56;
cada1f58dV = car2x.dV;
cada1f58 = car2x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index101) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index102) = cada1td1(:,Gator1Data.Index102) + -cada1f58dV;
cada1f59dV = cada1td1;
cada1f59 = car_position_2_x.f - cada1f58;
cada1tf2 = cada1f59(:,Gator1Data.Index103);
cada1f60dV = 2.*cada1tf2.^(2-1).*cada1f59dV;
cada1f60 = cada1f59.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index104) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car2y.dV;
cada1f61dV = cada1td1;
cada1f61 = car_position_2_y.f - car2y.f;
cada1tf2 = cada1f61(:,Gator1Data.Index105);
cada1f62dV = 2.*cada1tf2.^(2-1).*cada1f61dV;
cada1f62 = cada1f61.^2;
cada1td1 = zeros(size(cada1f60dV,1),7);
cada1td1(:,Gator1Data.Index106) = cada1f60dV;
cada1td1(:,Gator1Data.Index107) = cada1td1(:,Gator1Data.Index107) + cada1f62dV;
cada1f63dV = cada1td1;
cada1f63 = cada1f60 + cada1f62;
cada1f64 = car_size.f^2;
cada1f65dV = cada1f63dV;
cada1f65 = cada1f63 - cada1f64;
cada1f66dV = car3x.dV;
cada1f66 = car3x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index108) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index109) = cada1td1(:,Gator1Data.Index109) + -cada1f66dV;
cada1f67dV = cada1td1;
cada1f67 = car_position_1_x.f - cada1f66;
cada1tf2 = cada1f67(:,Gator1Data.Index110);
cada1f68dV = 2.*cada1tf2.^(2-1).*cada1f67dV;
cada1f68 = cada1f67.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index111) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car3y.dV;
cada1f69dV = cada1td1;
cada1f69 = car_position_1_y.f - car3y.f;
cada1tf2 = cada1f69(:,Gator1Data.Index112);
cada1f70dV = 2.*cada1tf2.^(2-1).*cada1f69dV;
cada1f70 = cada1f69.^2;
cada1td1 = zeros(size(cada1f68dV,1),7);
cada1td1(:,Gator1Data.Index113) = cada1f68dV;
cada1td1(:,Gator1Data.Index114) = cada1td1(:,Gator1Data.Index114) + cada1f70dV;
cada1f71dV = cada1td1;
cada1f71 = cada1f68 + cada1f70;
cada1f72 = car_size.f^2;
cada1f73dV = cada1f71dV;
cada1f73 = cada1f71 - cada1f72;
cada1f74dV = car3x.dV;
cada1f74 = car3x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index115) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index116) = cada1td1(:,Gator1Data.Index116) + -cada1f74dV;
cada1f75dV = cada1td1;
cada1f75 = car_position_1_x.f - cada1f74;
cada1tf2 = cada1f75(:,Gator1Data.Index117);
cada1f76dV = 2.*cada1tf2.^(2-1).*cada1f75dV;
cada1f76 = cada1f75.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index118) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car3y.dV;
cada1f77dV = cada1td1;
cada1f77 = car_position_1_y.f - car3y.f;
cada1tf2 = cada1f77(:,Gator1Data.Index119);
cada1f78dV = 2.*cada1tf2.^(2-1).*cada1f77dV;
cada1f78 = cada1f77.^2;
cada1td1 = zeros(size(cada1f76dV,1),7);
cada1td1(:,Gator1Data.Index120) = cada1f76dV;
cada1td1(:,Gator1Data.Index121) = cada1td1(:,Gator1Data.Index121) + cada1f78dV;
cada1f79dV = cada1td1;
cada1f79 = cada1f76 + cada1f78;
cada1f80 = car_size.f^2;
cada1f81dV = cada1f79dV;
cada1f81 = cada1f79 - cada1f80;
cada1f82dV = car3x.dV;
cada1f82 = car3x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index122) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index123) = cada1td1(:,Gator1Data.Index123) + -cada1f82dV;
cada1f83dV = cada1td1;
cada1f83 = car_position_2_x.f - cada1f82;
cada1tf2 = cada1f83(:,Gator1Data.Index124);
cada1f84dV = 2.*cada1tf2.^(2-1).*cada1f83dV;
cada1f84 = cada1f83.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index125) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car3y.dV;
cada1f85dV = cada1td1;
cada1f85 = car_position_2_y.f - car3y.f;
cada1tf2 = cada1f85(:,Gator1Data.Index126);
cada1f86dV = 2.*cada1tf2.^(2-1).*cada1f85dV;
cada1f86 = cada1f85.^2;
cada1td1 = zeros(size(cada1f84dV,1),7);
cada1td1(:,Gator1Data.Index127) = cada1f84dV;
cada1td1(:,Gator1Data.Index128) = cada1td1(:,Gator1Data.Index128) + cada1f86dV;
cada1f87dV = cada1td1;
cada1f87 = cada1f84 + cada1f86;
cada1f88 = car_size.f^2;
cada1f89dV = cada1f87dV;
cada1f89 = cada1f87 - cada1f88;
cada1f90dV = car3x.dV;
cada1f90 = car3x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index129) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index130) = cada1td1(:,Gator1Data.Index130) + -cada1f90dV;
cada1f91dV = cada1td1;
cada1f91 = car_position_2_x.f - cada1f90;
cada1tf2 = cada1f91(:,Gator1Data.Index131);
cada1f92dV = 2.*cada1tf2.^(2-1).*cada1f91dV;
cada1f92 = cada1f91.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index132) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car3y.dV;
cada1f93dV = cada1td1;
cada1f93 = car_position_2_y.f - car3y.f;
cada1tf2 = cada1f93(:,Gator1Data.Index133);
cada1f94dV = 2.*cada1tf2.^(2-1).*cada1f93dV;
cada1f94 = cada1f93.^2;
cada1td1 = zeros(size(cada1f92dV,1),7);
cada1td1(:,Gator1Data.Index134) = cada1f92dV;
cada1td1(:,Gator1Data.Index135) = cada1td1(:,Gator1Data.Index135) + cada1f94dV;
cada1f95dV = cada1td1;
cada1f95 = cada1f92 + cada1f94;
cada1f96 = car_size.f^2;
cada1f97dV = cada1f95dV;
cada1f97 = cada1f95 - cada1f96;
cada1f98dV = car4x.dV;
cada1f98 = car4x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index136) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index137) = cada1td1(:,Gator1Data.Index137) + -cada1f98dV;
cada1f99dV = cada1td1;
cada1f99 = car_position_1_x.f - cada1f98;
cada1tf2 = cada1f99(:,Gator1Data.Index138);
cada1f100dV = 2.*cada1tf2.^(2-1).*cada1f99dV;
cada1f100 = cada1f99.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index139) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car4y.dV;
cada1f101dV = cada1td1;
cada1f101 = car_position_1_y.f - car4y.f;
cada1tf2 = cada1f101(:,Gator1Data.Index140);
cada1f102dV = 2.*cada1tf2.^(2-1).*cada1f101dV;
cada1f102 = cada1f101.^2;
cada1td1 = zeros(size(cada1f100dV,1),7);
cada1td1(:,Gator1Data.Index141) = cada1f100dV;
cada1td1(:,Gator1Data.Index142) = cada1td1(:,Gator1Data.Index142) + cada1f102dV;
cada1f103dV = cada1td1;
cada1f103 = cada1f100 + cada1f102;
cada1f104 = car_size.f^2;
cada1f105dV = cada1f103dV;
cada1f105 = cada1f103 - cada1f104;
cada1f106dV = car4x.dV;
cada1f106 = car4x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index143) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index144) = cada1td1(:,Gator1Data.Index144) + -cada1f106dV;
cada1f107dV = cada1td1;
cada1f107 = car_position_1_x.f - cada1f106;
cada1tf2 = cada1f107(:,Gator1Data.Index145);
cada1f108dV = 2.*cada1tf2.^(2-1).*cada1f107dV;
cada1f108 = cada1f107.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index146) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car4y.dV;
cada1f109dV = cada1td1;
cada1f109 = car_position_1_y.f - car4y.f;
cada1tf2 = cada1f109(:,Gator1Data.Index147);
cada1f110dV = 2.*cada1tf2.^(2-1).*cada1f109dV;
cada1f110 = cada1f109.^2;
cada1td1 = zeros(size(cada1f108dV,1),7);
cada1td1(:,Gator1Data.Index148) = cada1f108dV;
cada1td1(:,Gator1Data.Index149) = cada1td1(:,Gator1Data.Index149) + cada1f110dV;
cada1f111dV = cada1td1;
cada1f111 = cada1f108 + cada1f110;
cada1f112 = car_size.f^2;
cada1f113dV = cada1f111dV;
cada1f113 = cada1f111 - cada1f112;
cada1f114dV = car4x.dV;
cada1f114 = car4x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index150) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index151) = cada1td1(:,Gator1Data.Index151) + -cada1f114dV;
cada1f115dV = cada1td1;
cada1f115 = car_position_2_x.f - cada1f114;
cada1tf2 = cada1f115(:,Gator1Data.Index152);
cada1f116dV = 2.*cada1tf2.^(2-1).*cada1f115dV;
cada1f116 = cada1f115.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index153) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car4y.dV;
cada1f117dV = cada1td1;
cada1f117 = car_position_2_y.f - car4y.f;
cada1tf2 = cada1f117(:,Gator1Data.Index154);
cada1f118dV = 2.*cada1tf2.^(2-1).*cada1f117dV;
cada1f118 = cada1f117.^2;
cada1td1 = zeros(size(cada1f116dV,1),7);
cada1td1(:,Gator1Data.Index155) = cada1f116dV;
cada1td1(:,Gator1Data.Index156) = cada1td1(:,Gator1Data.Index156) + cada1f118dV;
cada1f119dV = cada1td1;
cada1f119 = cada1f116 + cada1f118;
cada1f120 = car_size.f^2;
cada1f121dV = cada1f119dV;
cada1f121 = cada1f119 - cada1f120;
cada1f122dV = car4x.dV;
cada1f122 = car4x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index157) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index158) = cada1td1(:,Gator1Data.Index158) + -cada1f122dV;
cada1f123dV = cada1td1;
cada1f123 = car_position_2_x.f - cada1f122;
cada1tf2 = cada1f123(:,Gator1Data.Index159);
cada1f124dV = 2.*cada1tf2.^(2-1).*cada1f123dV;
cada1f124 = cada1f123.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index160) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car4y.dV;
cada1f125dV = cada1td1;
cada1f125 = car_position_2_y.f - car4y.f;
cada1tf2 = cada1f125(:,Gator1Data.Index161);
cada1f126dV = 2.*cada1tf2.^(2-1).*cada1f125dV;
cada1f126 = cada1f125.^2;
cada1td1 = zeros(size(cada1f124dV,1),7);
cada1td1(:,Gator1Data.Index162) = cada1f124dV;
cada1td1(:,Gator1Data.Index163) = cada1td1(:,Gator1Data.Index163) + cada1f126dV;
cada1f127dV = cada1td1;
cada1f127 = cada1f124 + cada1f126;
cada1f128 = car_size.f^2;
cada1f129dV = cada1f127dV;
cada1f129 = cada1f127 - cada1f128;
cada1f130dV = car5x.dV;
cada1f130 = car5x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index164) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index165) = cada1td1(:,Gator1Data.Index165) + -cada1f130dV;
cada1f131dV = cada1td1;
cada1f131 = car_position_1_x.f - cada1f130;
cada1tf2 = cada1f131(:,Gator1Data.Index166);
cada1f132dV = 2.*cada1tf2.^(2-1).*cada1f131dV;
cada1f132 = cada1f131.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index167) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car5y.dV;
cada1f133dV = cada1td1;
cada1f133 = car_position_1_y.f - car5y.f;
cada1tf2 = cada1f133(:,Gator1Data.Index168);
cada1f134dV = 2.*cada1tf2.^(2-1).*cada1f133dV;
cada1f134 = cada1f133.^2;
cada1td1 = zeros(size(cada1f132dV,1),7);
cada1td1(:,Gator1Data.Index169) = cada1f132dV;
cada1td1(:,Gator1Data.Index170) = cada1td1(:,Gator1Data.Index170) + cada1f134dV;
cada1f135dV = cada1td1;
cada1f135 = cada1f132 + cada1f134;
cada1f136 = car_size.f^2;
cada1f137dV = cada1f135dV;
cada1f137 = cada1f135 - cada1f136;
cada1f138dV = car5x.dV;
cada1f138 = car5x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index171) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index172) = cada1td1(:,Gator1Data.Index172) + -cada1f138dV;
cada1f139dV = cada1td1;
cada1f139 = car_position_1_x.f - cada1f138;
cada1tf2 = cada1f139(:,Gator1Data.Index173);
cada1f140dV = 2.*cada1tf2.^(2-1).*cada1f139dV;
cada1f140 = cada1f139.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index174) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car5y.dV;
cada1f141dV = cada1td1;
cada1f141 = car_position_1_y.f - car5y.f;
cada1tf2 = cada1f141(:,Gator1Data.Index175);
cada1f142dV = 2.*cada1tf2.^(2-1).*cada1f141dV;
cada1f142 = cada1f141.^2;
cada1td1 = zeros(size(cada1f140dV,1),7);
cada1td1(:,Gator1Data.Index176) = cada1f140dV;
cada1td1(:,Gator1Data.Index177) = cada1td1(:,Gator1Data.Index177) + cada1f142dV;
cada1f143dV = cada1td1;
cada1f143 = cada1f140 + cada1f142;
cada1f144 = car_size.f^2;
cada1f145dV = cada1f143dV;
cada1f145 = cada1f143 - cada1f144;
cada1f146dV = car5x.dV;
cada1f146 = car5x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index178) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index179) = cada1td1(:,Gator1Data.Index179) + -cada1f146dV;
cada1f147dV = cada1td1;
cada1f147 = car_position_2_x.f - cada1f146;
cada1tf2 = cada1f147(:,Gator1Data.Index180);
cada1f148dV = 2.*cada1tf2.^(2-1).*cada1f147dV;
cada1f148 = cada1f147.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index181) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car5y.dV;
cada1f149dV = cada1td1;
cada1f149 = car_position_2_y.f - car5y.f;
cada1tf2 = cada1f149(:,Gator1Data.Index182);
cada1f150dV = 2.*cada1tf2.^(2-1).*cada1f149dV;
cada1f150 = cada1f149.^2;
cada1td1 = zeros(size(cada1f148dV,1),7);
cada1td1(:,Gator1Data.Index183) = cada1f148dV;
cada1td1(:,Gator1Data.Index184) = cada1td1(:,Gator1Data.Index184) + cada1f150dV;
cada1f151dV = cada1td1;
cada1f151 = cada1f148 + cada1f150;
cada1f152 = car_size.f^2;
cada1f153dV = cada1f151dV;
cada1f153 = cada1f151 - cada1f152;
cada1f154dV = car5x.dV;
cada1f154 = car5x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index185) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index186) = cada1td1(:,Gator1Data.Index186) + -cada1f154dV;
cada1f155dV = cada1td1;
cada1f155 = car_position_2_x.f - cada1f154;
cada1tf2 = cada1f155(:,Gator1Data.Index187);
cada1f156dV = 2.*cada1tf2.^(2-1).*cada1f155dV;
cada1f156 = cada1f155.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index188) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car5y.dV;
cada1f157dV = cada1td1;
cada1f157 = car_position_2_y.f - car5y.f;
cada1tf2 = cada1f157(:,Gator1Data.Index189);
cada1f158dV = 2.*cada1tf2.^(2-1).*cada1f157dV;
cada1f158 = cada1f157.^2;
cada1td1 = zeros(size(cada1f156dV,1),7);
cada1td1(:,Gator1Data.Index190) = cada1f156dV;
cada1td1(:,Gator1Data.Index191) = cada1td1(:,Gator1Data.Index191) + cada1f158dV;
cada1f159dV = cada1td1;
cada1f159 = cada1f156 + cada1f158;
cada1f160 = car_size.f^2;
cada1f161dV = cada1f159dV;
cada1f161 = cada1f159 - cada1f160;
cada1f162dV = car6x.dV;
cada1f162 = car6x.f - 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index192) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index193) = cada1td1(:,Gator1Data.Index193) + -cada1f162dV;
cada1f163dV = cada1td1;
cada1f163 = car_position_1_x.f - cada1f162;
cada1tf2 = cada1f163(:,Gator1Data.Index194);
cada1f164dV = 2.*cada1tf2.^(2-1).*cada1f163dV;
cada1f164 = cada1f163.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index195) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car6y.dV;
cada1f165dV = cada1td1;
cada1f165 = car_position_1_y.f - car6y.f;
cada1tf2 = cada1f165(:,Gator1Data.Index196);
cada1f166dV = 2.*cada1tf2.^(2-1).*cada1f165dV;
cada1f166 = cada1f165.^2;
cada1td1 = zeros(size(cada1f164dV,1),7);
cada1td1(:,Gator1Data.Index197) = cada1f164dV;
cada1td1(:,Gator1Data.Index198) = cada1td1(:,Gator1Data.Index198) + cada1f166dV;
cada1f167dV = cada1td1;
cada1f167 = cada1f164 + cada1f166;
cada1f168 = car_size.f^2;
cada1f169dV = cada1f167dV;
cada1f169 = cada1f167 - cada1f168;
cada1f170dV = car6x.dV;
cada1f170 = car6x.f + 1.4;
cada1td1 = zeros(size(car_position_1_x.dV,1),5);
cada1td1(:,Gator1Data.Index199) = car_position_1_x.dV;
cada1td1(:,Gator1Data.Index200) = cada1td1(:,Gator1Data.Index200) + -cada1f170dV;
cada1f171dV = cada1td1;
cada1f171 = car_position_1_x.f - cada1f170;
cada1tf2 = cada1f171(:,Gator1Data.Index201);
cada1f172dV = 2.*cada1tf2.^(2-1).*cada1f171dV;
cada1f172 = cada1f171.^2;
cada1td1 = zeros(size(car_position_1_y.dV,1),3);
cada1td1(:,Gator1Data.Index202) = car_position_1_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car6y.dV;
cada1f173dV = cada1td1;
cada1f173 = car_position_1_y.f - car6y.f;
cada1tf2 = cada1f173(:,Gator1Data.Index203);
cada1f174dV = 2.*cada1tf2.^(2-1).*cada1f173dV;
cada1f174 = cada1f173.^2;
cada1td1 = zeros(size(cada1f172dV,1),7);
cada1td1(:,Gator1Data.Index204) = cada1f172dV;
cada1td1(:,Gator1Data.Index205) = cada1td1(:,Gator1Data.Index205) + cada1f174dV;
cada1f175dV = cada1td1;
cada1f175 = cada1f172 + cada1f174;
cada1f176 = car_size.f^2;
cada1f177dV = cada1f175dV;
cada1f177 = cada1f175 - cada1f176;
cada1f178dV = car6x.dV;
cada1f178 = car6x.f - 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index206) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index207) = cada1td1(:,Gator1Data.Index207) + -cada1f178dV;
cada1f179dV = cada1td1;
cada1f179 = car_position_2_x.f - cada1f178;
cada1tf2 = cada1f179(:,Gator1Data.Index208);
cada1f180dV = 2.*cada1tf2.^(2-1).*cada1f179dV;
cada1f180 = cada1f179.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index209) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car6y.dV;
cada1f181dV = cada1td1;
cada1f181 = car_position_2_y.f - car6y.f;
cada1tf2 = cada1f181(:,Gator1Data.Index210);
cada1f182dV = 2.*cada1tf2.^(2-1).*cada1f181dV;
cada1f182 = cada1f181.^2;
cada1td1 = zeros(size(cada1f180dV,1),7);
cada1td1(:,Gator1Data.Index211) = cada1f180dV;
cada1td1(:,Gator1Data.Index212) = cada1td1(:,Gator1Data.Index212) + cada1f182dV;
cada1f183dV = cada1td1;
cada1f183 = cada1f180 + cada1f182;
cada1f184 = car_size.f^2;
cada1f185dV = cada1f183dV;
cada1f185 = cada1f183 - cada1f184;
cada1f186dV = car6x.dV;
cada1f186 = car6x.f + 1.4;
cada1td1 = zeros(size(car_position_2_x.dV,1),5);
cada1td1(:,Gator1Data.Index213) = car_position_2_x.dV;
cada1td1(:,Gator1Data.Index214) = cada1td1(:,Gator1Data.Index214) + -cada1f186dV;
cada1f187dV = cada1td1;
cada1f187 = car_position_2_x.f - cada1f186;
cada1tf2 = cada1f187(:,Gator1Data.Index215);
cada1f188dV = 2.*cada1tf2.^(2-1).*cada1f187dV;
cada1f188 = cada1f187.^2;
cada1td1 = zeros(size(car_position_2_y.dV,1),3);
cada1td1(:,Gator1Data.Index216) = car_position_2_y.dV;
cada1td1(:,3) = cada1td1(:,3) + -car6y.dV;
cada1f189dV = cada1td1;
cada1f189 = car_position_2_y.f - car6y.f;
cada1tf2 = cada1f189(:,Gator1Data.Index217);
cada1f190dV = 2.*cada1tf2.^(2-1).*cada1f189dV;
cada1f190 = cada1f189.^2;
cada1td1 = zeros(size(cada1f188dV,1),7);
cada1td1(:,Gator1Data.Index218) = cada1f188dV;
cada1td1(:,Gator1Data.Index219) = cada1td1(:,Gator1Data.Index219) + cada1f190dV;
cada1f191dV = cada1td1;
cada1f191 = cada1f188 + cada1f190;
cada1f192 = car_size.f^2;
cada1f193dV = cada1f191dV;
cada1f193 = cada1f191 - cada1f192;
cada1td1 = zeros(size(cada1f1,1),169);
cada1td1(:,25) = cada1f1dV;
cada1td1(:,Gator1Data.Index220) = cada1f9dV;
cada1td1(:,Gator1Data.Index221) = cada1f17dV;
cada1td1(:,Gator1Data.Index222) = cada1f25dV;
cada1td1(:,Gator1Data.Index223) = cada1f33dV;
cada1td1(:,Gator1Data.Index224) = cada1f41dV;
cada1td1(:,Gator1Data.Index225) = cada1f49dV;
cada1td1(:,Gator1Data.Index226) = cada1f57dV;
cada1td1(:,Gator1Data.Index227) = cada1f65dV;
cada1td1(:,Gator1Data.Index228) = cada1f73dV;
cada1td1(:,Gator1Data.Index229) = cada1f81dV;
cada1td1(:,Gator1Data.Index230) = cada1f89dV;
cada1td1(:,Gator1Data.Index231) = cada1f97dV;
cada1td1(:,Gator1Data.Index232) = cada1f105dV;
cada1td1(:,Gator1Data.Index233) = cada1f113dV;
cada1td1(:,Gator1Data.Index234) = cada1f121dV;
cada1td1(:,Gator1Data.Index235) = cada1f129dV;
cada1td1(:,Gator1Data.Index236) = cada1f137dV;
cada1td1(:,Gator1Data.Index237) = cada1f145dV;
cada1td1(:,Gator1Data.Index238) = cada1f153dV;
cada1td1(:,Gator1Data.Index239) = cada1f161dV;
cada1td1(:,Gator1Data.Index240) = cada1f169dV;
cada1td1(:,Gator1Data.Index241) = cada1f177dV;
cada1td1(:,Gator1Data.Index242) = cada1f185dV;
cada1td1(:,Gator1Data.Index243) = cada1f193dV;
phaseout.path.dV = cada1td1;
phaseout.path.f = [cada1f1 cada1f9 cada1f17 cada1f25 cada1f33 cada1f41 cada1f49 cada1f57 cada1f65 cada1f73 cada1f81 cada1f89 cada1f97 cada1f105 cada1f113 cada1f121 cada1f129 cada1f137 cada1f145 cada1f153 cada1f161 cada1f169 cada1f177 cada1f185 cada1f193];
%User Line: phaseout.path = [z_total(:,2), (car_position_1_x - (car1x-1.4)).^2 + (car_position_1_y - car1y).^2 - car_size^2,                               (car_position_1_x - (car1x+1.4)).^2 + (car_position_1_y - car1y).^2 - car_size^2,                               (car_position_2_x - (car1x-1.4)).^2 + (car_position_2_y - car1y).^2 - car_size^2,                               (car_position_2_x - (car1x+1.4)).^2 + (car_position_2_y - car1y).^2 - car_size^2,                               (car_position_1_x - (car2x-1.4)).^2 + (car_position_1_y - car2y).^2 - car_size^2,                               (car_position_1_x - (car2x+1.4)).^2 + (car_position_1_y - car2y).^2 - car_size^2,                               (car_position_2_x - (car2x-1.4)).^2 + (car_position_2_y - car2y).^2 - car_size^2,                               (car_position_2_x - (car2x+1.4)).^2 + (car_position_2_y - car2y).^2 - car_size^2,                               (car_position_1_x - (car3x-1.4)).^2 + (car_position_1_y - car3y).^2 - car_size^2,                               (car_position_1_x - (car3x+1.4)).^2 + (car_position_1_y - car3y).^2 - car_size^2,                               (car_position_2_x - (car3x-1.4)).^2 + (car_position_2_y - car3y).^2 - car_size^2,                               (car_position_2_x - (car3x+1.4)).^2 + (car_position_2_y - car3y).^2 - car_size^2,                               (car_position_1_x - (car4x-1.4)).^2 + (car_position_1_y - car4y).^2 - car_size^2,                               (car_position_1_x - (car4x+1.4)).^2 + (car_position_1_y - car4y).^2 - car_size^2,                               (car_position_2_x - (car4x-1.4)).^2 + (car_position_2_y - car4y).^2 - car_size^2,                               (car_position_2_x - (car4x+1.4)).^2 + (car_position_2_y - car4y).^2 - car_size^2,                               (car_position_1_x - (car5x-1.4)).^2 + (car_position_1_y - car5y).^2 - car_size^2,                               (car_position_1_x - (car5x+1.4)).^2 + (car_position_1_y - car5y).^2 - car_size^2,                               (car_position_2_x - (car5x-1.4)).^2 + (car_position_2_y - car5y).^2 - car_size^2,                               (car_position_2_x - (car5x+1.4)).^2 + (car_position_2_y - car5y).^2 - car_size^2,                               (car_position_1_x - (car6x-1.4)).^2 + (car_position_1_y - car6y).^2 - car_size^2,                               (car_position_1_x - (car6x+1.4)).^2 + (car_position_1_y - car6y).^2 - car_size^2,                               (car_position_2_x - (car6x-1.4)).^2 + (car_position_2_y - car6y).^2 - car_size^2,                               (car_position_2_x - (car6x+1.4)).^2 + (car_position_2_y - car6y).^2 - car_size^2];
phaseout.dynamics.dV_size = [7,30];
phaseout.dynamics.dV_location = Gator1Data.Index244;
phaseout.path.dV_size = [25,30];
phaseout.path.dV_location = Gator1Data.Index245;
end


function ADiGator_LoadData()
global ADiGator_car_highway_dynamics_gpopsADiGatorGrd
ADiGator_car_highway_dynamics_gpopsADiGatorGrd = load('car_highway_dynamics_gpopsADiGatorGrd.mat');
return
end